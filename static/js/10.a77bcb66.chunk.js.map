{"version":3,"sources":["images/bg-ayane.png","components/UserCenterView.tsx","pages/user.tsx","containers/pages/user.ts"],"names":["module","exports","hash","label","TabMessage","memo","props","useEffect","refresh","className","style","JSON","stringify","inbox","TabFavorite","UserCenterView","user","callbacks","inProcess","$hidden","visibility","render","href","match","path","$id","indexOf","links","badgeOffset","i","push","count","offset","key","to","Card","mails","favorite","fav","favorites","$delete","delFav","id","exact","from","Item","title","content","EditCard","form","cb","username","nickname","signature","privacyShow","_avatar","avatar","defaultAvatar","useState","view","setView","setAvatar","gravatar","setGravatar","$avatar","convertGravatar","onFinish","value","avatarUrl","labelCol","span","wrapperCol","size","initialValues","onFinishFailed","message","info","name","disabled","rules","required","valuePropName","visible","onCancel","onOk","okText","cancelText","margin","onChange","e","target","checked","display","flexDirection","alignItems","width","src","shape","onClick","User","loggedIn","getById","lib","updateInfo","fetchInbox","fetchFavorite","deleteFavorite","route","useContext","RouteContext","history","useHistory","isMe","params","uid","_id","edit","setEdit","Form","useForm","console","log","illegalUID","test","url","undefined","$lib","$uid","isAdmin","manageCateId","createdAt","lastSignIn","button","submit","LoadingOutlined","SaveOutlined","EditOutlined","PlusOutlined","BgImg","ayane","tags","_getUserGroup","defaultSignature","values","data","toString","ArrowRightOutlined","connect","component","userCenter","token","dispatch","bindActionCreators","$actions"],"mappings":"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","file":"static/js/10.a77bcb66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-ayane.029bf6de.png\";","import React, {CSSProperties, FC, memo, useEffect} from \"react\";\r\nimport {HashRouter, Redirect, Route, Switch, Link} from \"react-router-dom\";\r\nimport {RouteComponentProps} from \"react-router\";\r\n\r\nimport '../styles/components/UserCenterView.scss';\r\n\r\nimport Card from \"./Card\";\r\nimport {UserStore} from \"../redux/reducers/user\";\r\nimport {Badge} from 'antd';\r\nimport {Favorite, Mail} from \"../configs/types\";\r\n\r\ninterface IProps {\r\n    className?: string;\r\n    user: UserStore;\r\n    callbacks: {\r\n        inbox: () => void;\r\n        favorite: () => void;\r\n        delFav: (id: number) => void;\r\n    };\r\n    inProcess: boolean;\r\n}\r\n\r\nconst hash = ['/', '/message', '/theme', '/reply', '/favorite',];\r\nconst label = ['首页', '消息', '主题', '回复', '收藏',];\r\n\r\nconst TabMessage: FC<{\r\n    refresh: () => void;\r\n    inProcess: boolean;\r\n    inbox: Mail[];\r\n    style?: Partial<CSSProperties>;\r\n}> = memo(props => {\r\n\r\n    useEffect(() => {\r\n        props.refresh(); return;\r\n    }, []);\r\n\r\n    return (\r\n        <div className='tab-message' style={props.style ?? {}}>\r\n            {JSON.stringify(props.inbox)}\r\n        </div>\r\n    )\r\n});\r\n\r\n\r\nconst TabFavorite: FC<{\r\n    refresh: () => void;\r\n    $delete: (id: number) => void;\r\n    inProcess: boolean;\r\n    fav: Favorite[];\r\n    style?: Partial<CSSProperties>;\r\n}> = memo(props => {\r\n\r\n    return (\r\n        <div className='tab-favorite'>\r\n\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nconst UserCenterView: FC<IProps> = memo(props => {\r\n\r\n    const {className, user, callbacks, inProcess} = props;\r\n\r\n    const $hidden = {visibility: 'hidden'} as Partial<CSSProperties>;\r\n\r\n    const render = (props: RouteComponentProps) => {\r\n\r\n        const href = props.match.path;\r\n        const $id = hash.indexOf(href);\r\n        let links = [];\r\n        const badgeOffset = [-28, 0] as any;\r\n\r\n        for (let i = 0; i < 5; ++ i) {\r\n            if (i === 1) links.push(<Badge count={user.inbox} offset={badgeOffset}\r\n                key={i}><Link to={hash[i]}\r\n                      className={`nav-item` + (i === $id ? ' selected' : '')}>\r\n                {label[i]}\r\n            </Link></Badge>)\r\n            else links.push(<Badge count={0} offset={badgeOffset}\r\n            key={i}><Link to={hash[i]}\r\n                className={`nav-item` + (i === $id ? ' selected' : '')}>\r\n                {label[i]}\r\n            </Link></Badge>);\r\n        }\r\n\r\n        return (\r\n            <Card><div className={`card-container`}>\r\n                <div className='nav-bar'>\r\n                    {links}\r\n                </div>\r\n                <TabMessage refresh={callbacks.inbox} style={1 === $id ? {} : $hidden}\r\n                            inbox={user.mails} inProcess={inProcess}/>\r\n                <TabFavorite refresh={callbacks.favorite} style={4 === $id ? {} : $hidden}\r\n                             fav={user.favorites} inProcess={inProcess} $delete={callbacks.delFav}/>\r\n            </div></Card>\r\n        )\r\n    }\r\n\r\n    return <div id='comp-user-center-view' className={className}>\r\n        <HashRouter><Switch>\r\n            <Route path='/' exact render={render}/>\r\n            <Route path='/message' exact render={render}/>\r\n            <Route path='/theme' exact render={render}/>\r\n            <Route path='/reply' exact render={render}/>\r\n            <Route path='/favorite' exact render={render}/>\r\n            <Redirect from='/*' to='/' />\r\n        </Switch></HashRouter>\r\n    </div>\r\n});\r\n\r\nexport default UserCenterView;\r\n","import React, {FC, memo, useContext, useEffect, useState} from \"react\";\r\nimport {UserProps} from '../containers/pages/user';\r\nimport '../styles/user.scss';\r\nimport * as url from '../configs/url';\r\nimport {UpdateUserInfoForm, User as $User} from '../configs/types';\r\n\r\nimport {\r\n    message, Avatar, Button, Form,\r\n    Input, Switch, Modal, Checkbox,\r\n} from 'antd';\r\nimport {\r\n    ArrowRightOutlined, EditOutlined,\r\n    SaveOutlined, LoadingOutlined, PlusOutlined\r\n} from '@ant-design/icons';\r\nimport ayane from '../images/bg-ayane.png';\r\nimport BgImg from \"../components/BgImg\";\r\nimport {RouteContext} from \"../components/PageFrame\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport Card from \"../components/Card\";\r\nimport {defaultAvatar, defaultSignature} from \"../configs/consts\";\r\nimport {loading$1, tags} from \"../utils/items\";\r\nimport {_getUserGroup, convertGravatar} from \"../utils/tools\";\r\nimport UserCenterView from \"../components/UserCenterView\"\r\n\r\nconst Item: FC<{title: string; content: string}> = memo(({title, content}) => (\r\n    <div className='inner-item'>\r\n       <div className='inner-title'>{title}</div>\r\n       <div className='inner-content'>{content}</div>\r\n    </div>\r\n))\r\n\r\nconst EditCard: FC<{\r\n    form: ReturnType<Form[\"useForm\"]>\r\n    cb: (value: object) => void;\r\n    user: $User;\r\n}> = memo(props => {\r\n\r\n    const [form] = props.form;\r\n    const {cb, user} = props;\r\n    const {username, nickname, signature, privacyShow} = user;\r\n    const _avatar = user.avatar ?? defaultAvatar;\r\n    const [view, setView] = useState(false);\r\n    const [avatar,setAvatar] = useState(_avatar);\r\n    const [gravatar, setGravatar] = useState(false);\r\n    const $avatar = () => gravatar ? convertGravatar(avatar) : avatar;\r\n\r\n    const callback = (value: object) => cb({...value, avatarUrl: $avatar()});\r\n\r\n    const layout = {\r\n        labelCol: { span: 6 },\r\n        wrapperCol: { span: 16 },\r\n    };\r\n\r\n    return (\r\n    <Card className='edit-card'>\r\n      <div className='card-container'>\r\n        <div className='form-container'>\r\n          <Form form={form} onFinish={callback} className='form' {...layout} size='large'\r\n                initialValues={{username, nickname, signature, privacyShow}}\r\n                onFinishFailed={() => message.info('表单信息验证失败，请重试！')}>\r\n            <Form.Item name='username' label='用户名'>\r\n              <Input disabled/>\r\n            </Form.Item>\r\n            <Form.Item name='nickname' label='昵称' rules={[{required: true, message: '昵称不能为空'}]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name='signature' label='个性签名'>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item name='privacyShow' label='显示资料' valuePropName='checked'>\r\n              <Switch />\r\n            </Form.Item>\r\n            <Form.Item name='avatar'>\r\n              <Modal title='更换头像' visible={view}\r\n                     onCancel={() => {\r\n                         setView(false);\r\n                         setAvatar(_avatar);\r\n                         setGravatar(false);\r\n                     }}\r\n                     onOk={() => setView(false)}\r\n                     okText='暂存修改' cancelText='取消并还原修改'>\r\n                <div style={{margin: '10px 0'}}>请输入头像的 URL 地址，它需要允许本站的访问：</div>\r\n                <Input onChange={e => setAvatar(e.target.value)} value={avatar}/>\r\n                <Checkbox checked={gravatar}\r\n                          style={{margin: '10px 0'}}\r\n                          onChange={e => setGravatar(!gravatar)}>\r\n                  使用 Gravatar （需要提供电子邮件地址）\r\n                </Checkbox>\r\n                <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}>\r\n                  <div style={{width: '100%', margin: '10px 0'}}>预览图：</div>\r\n                  <Avatar src={$avatar()} shape='square' size={180}/>\r\n                </div>\r\n              </Modal>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n        <div className='avatar-container'>\r\n          <Avatar src={$avatar()} shape='square' size={240}/>\r\n          <Button shape='round' onClick={() => setView(true)} size='large'\r\n                  className='edit-avatar' >\r\n            编辑\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Card>)\r\n})\r\n\r\nconst User: FC<UserProps> = memo(({\r\n    user, loggedIn, getById, lib, updateInfo, inProcess, fetchInbox,\r\n    fetchFavorite, deleteFavorite,\r\n}) => {\r\n\r\n    const route = useContext(RouteContext);\r\n    const history = useHistory();\r\n    const isMe = !route.match.params.uid || route.match.params.uid === user.info._id;\r\n    const uid = route.match.params.uid ?? user.info._id;\r\n\r\n    const [edit, setEdit] = useState(false);\r\n    const [form] = Form.useForm();\r\n    const cb = {\r\n        inbox: () => {fetchInbox(user.info._id); return},\r\n        favorite: () => {fetchFavorite(); return},\r\n        delFav: (id: number) => {deleteFavorite(id); return},\r\n    }\r\n\r\n    useEffect(() => {\r\n        // if (loggedIn && !user.info._id) return;\r\n        console.log(uid);\r\n        illegalUID(uid, loggedIn);\r\n        console.log(lib[uid]);\r\n        if (!isMe && !lib[uid]) getById(uid);\r\n    }, [])\r\n\r\n    const illegalUID = (uid: any, loggedIn: boolean) => {\r\n        if (!!uid && /[a-zA-Z_]/.test(uid)) {\r\n            message.info(`UID: ${uid} 格式不正确，将回到主页！`); // TODO: 怎么样才能不弹出两次通知啊？\r\n            history.push(url.root);\r\n        } else if (uid === undefined && !loggedIn) {\r\n            message.info('您还没有登录，将跳转登陆页面！');\r\n            history.push(url.login);\r\n        } else return undefined;\r\n    }\r\n\r\n    const $lib = ($uid: number) => {\r\n        return lib[$uid] ?? {\r\n            avatar: defaultAvatar,\r\n            nickname: '加载中……',\r\n            isAdmin: false,\r\n            manageCateId: uid ?? 0,\r\n            createdAt: '加载中……',\r\n            lastSignIn: '加载中……',\r\n            signature: '加载中……',\r\n            username: '加载中……',\r\n            _id: 0,\r\n        }\r\n    }\r\n\r\n    const handleEdit = (values: any) => {\r\n        const data = {...values, id: uid};\r\n        if (values.nickname === $lib(uid).nickname)     // TODO: 也许可以对象 differ？\r\n            data.nickname = null;\r\n        updateInfo(data, () => setEdit(false));\r\n    }\r\n\r\n    const handleClick = () => {\r\n        if (!edit) setEdit(!edit);\r\n        else form.submit();\r\n    }\r\n\r\n    const handleSend = () => {\r\n\r\n    }\r\n\r\n    const button = isMe || user.info.isAdmin ? (\r\n        <Button className='button' shape='round' onClick={handleClick}>\r\n            {edit ? (inProcess ? <LoadingOutlined /> :<SaveOutlined />) : <EditOutlined/>}\r\n            {edit ? '保存修改' : '编辑信息'}\r\n        </Button>\r\n    ) : (\r\n        <Button className='button' shape='round' onClick={handleSend}\r\n                disabled title='功能开发中'>\r\n            <PlusOutlined /> 发送私信\r\n        </Button>\r\n    )\r\n\r\n    return (\r\n      <div id='page-user' className='page'>\r\n        <BgImg src={ayane} />\r\n        {// TODO: 除了初始值之外还有更好的办法吗？\r\n        <div className='container'>\r\n          <div className='upper-block'>\r\n            <Card><div className='card-container'>\r\n              <div className='standard-info'>\r\n                <Avatar src={$lib(uid).avatar ?? defaultAvatar} size={64} className='avatar'/>\r\n                <div className='text-field'>\r\n                  <div className='main-text'>\r\n                    <div className='nickname'>{$lib(uid).nickname}</div>\r\n                    <div className='tags'>{tags[_getUserGroup($lib(uid))]}</div>\r\n                    <div className='username'>用户名： {$lib(uid).username}</div>\r\n                  </div>\r\n                  <div className='sign-text'>\r\n                    {!$lib(uid).signature ? defaultSignature : $lib(uid).signature}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='buttons-group'>\r\n                {button}\r\n              </div>\r\n            </div></Card>\r\n          </div>\r\n          <div className='lower-block'>{edit ?\r\n            <EditCard form={[form]} cb={handleEdit} user={user.info}/> :\r\n            <><UserCenterView className='center-view' user={user} callbacks={cb} inProcess={inProcess}/>\r\n            <Card className='standard-info'><div>\r\n              <div className='main-title'>个人基本信息</div>\r\n              <div className='list-content'>\r\n                <Item title='用户名' content={$lib(uid).username} />\r\n                <Item title='用户 ID' content={$lib(uid)._id.toString()} />\r\n                <Item title='注册日期' content={$lib(uid).createdAt} />\r\n                <Item title='最后登录' content={$lib(uid).lastSignIn} />\r\n              </div>\r\n              <div className='wrapper'><Button title='进行主题帖，回复等管理' shape='round' className='goto-manage' size='large'\r\n                      onClick={() => {}}>\r\n                <ArrowRightOutlined />\r\n                管理入口\r\n              </Button></div>\r\n            </div></Card></>}\r\n          </div>\r\n        </div>}\r\n      </div>\r\n    )\r\n});\r\n\r\nexport default User;\r\n","import {connect} from \"react-redux\";\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport {StoreState} from \"../../redux/reducers\";\r\nimport User from \"../../pages/user\";\r\n\r\nimport * as $actions from '../../redux/actions/async';\r\n\r\nconst mapStateToProps = ({\r\n    user, component: {userCenter, inProcess}\r\n}: StoreState) => ({\r\n    loggedIn: !!user.token, user,\r\n    lib: userCenter, inProcess\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\r\n    getById: $actions.fetchUserInfoStart,\r\n    updateInfo: $actions.updateUserInfoStart,\r\n    fetchInbox: $actions.fetchMyInboxStart,\r\n    fetchFavorite: $actions.fetchMyFavoriteStart,\r\n    deleteFavorite: $actions.deleteFavoriteStart,\r\n}, dispatch);\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport type UserProps = StateProps & DispatchProps;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\r\n"],"sourceRoot":""}