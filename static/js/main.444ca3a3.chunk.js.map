{"version":3,"sources":["configs/url.ts","components/Card.tsx","utils/items.tsx","components/BgImg.tsx","components/IconFont.tsx","components/IconItem.tsx","components/ListItem.tsx","components/UserInfoCard.tsx","components/TopBar.tsx","components/Footer.tsx","components/PageFrame.tsx","utils/DateTimes.ts","utils/tools.ts","images/bg-atri.png","images/bg-shiroha.png","serviceWorker.ts","index.tsx","redux/actions/async.ts","configs/consts.ts","images/favicon.svg","redux/actions/index.ts","containers/PageFrame.ts","configs/api.ts","components/Loading.tsx","components/SignCard.tsx","components/views/Login.tsx","containers/views/Login.ts","components/views/Register.tsx","containers/views/Register.ts","test/index.tsx","utils/xhr.ts","test/container/index.ts","pages/index.tsx","sagas/user/FetchMyInfo.ts","sagas/user/LoginStart.ts","sagas/user/RegisterStart.ts","sagas/user/UpdateUserInfoStart.ts","sagas/user/FetchMyInbox.ts","sagas/user/FetchMyFavorite.ts","sagas/user/DeleteFavorite.ts","sagas/user/index.ts","sagas/components/WaitProcess.ts","sagas/components/FetchUserInfoStart.ts","sagas/components/index.ts","sagas/pages/FetchHomePage.ts","sagas/pages/FetchCategories.ts","sagas/pages/FetchAllThemes.ts","sagas/pages/FetchCategoryDetail.ts","sagas/pages/index.ts","sagas/index.ts","utils/useStorage.ts","redux/reducers/user.ts","redux/reducers/homepage.ts","redux/reducers/component.ts","redux/reducers/view.ts","redux/reducers/category.ts","redux/reducers/index.ts","App.tsx"],"names":["root","login","register","category","user","me","$category","cid","$404","Card","memo","props","$class","className","$style","style","id","children","tags","color","icon","fontSize","spin","LoadingIcon","display","alignItems","justifyContent","width","height","indicator","BgImg","backgroundImage","src","zIndex","IconFont","createFromIconfontCN","scriptUrl","iconFontSrc","IconItem","$size","size","$msg","msg","$span","onClick","count","type","title","ListItem","$href","key","href","selected","label","UserInfoCard","store","cb","history","useHistory","info","manageCate","inbox","group","getUserGroup","avatar","defaultAvatar","nickname","username","push","message","url","logout","margin","SearchBar","Search","placeholder","onSearch","value","TopBar","loggedIn","infoCardCB","notification","description","placement","appName","logo","alt","trigger","content","isLoading","LoadingOutlined","Footer","appVersion","RouteContext","createContext","PageFrame","toTopBar","userInfo","route","match","location","unload","_id","path","pathname","hash","loading","useEffect","console","log","reloadInfo","Provider","stringConvert","date","undefined","replace","substr","checkPassWord","pwd","res","hasOwnProperty","hasIllegal","metLength","analyzePassWord","hasDigit","test","hasLower","hasUpper","hasSymbol","length","pwdMinLength","testPassWord","cate","developerName","find","isAdmin","manageCateId","_getUserGroup","cnt","$cnt","cateToCate","obj","coverUrl","createTime","createdAt","desc","name","status","updateTime","updatedAt","visits","visitsCount","userToUser","body","lastSignIn","avatarUrl","convertGravatar","email","mailto","trim","toLowerCase","md5","themeToTheme","cateId","categoryId","createdTime","authorId","creatorId","latestReplyTime","latestReplyAt","replies","replyCount","pinned","top","noticeToAnnouncement","uniqueArray","arr","$$","ii","indexOf","module","exports","Boolean","window","hostname","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","FETCH_MY_INFO_START","fetchMyInfoStart","to","isFirstTime","redirect","LOGIN_START","loginStart","password","WAIT_PROCESS","REGISTER_START","registerStart","form","FETCH_USER_INFO_START","fetchUserInfoStart","uid","UPDATE_USER_INFO_START","updateUserInfoStart","data","FETCH_MY_INBOX_START","fetchMyInboxStart","FETCH_MY_FAVORITE_START","fetchMyFavoriteStart","DELETE_FAVORITE_START","deleteFavoriteStart","fid","FETCH_CATEGORIES_START","fetchCategoriesStart","FETCH_ALL_THEMES_START","FETCH_CATEGORY_DETAIL","fetchCategoryDetail","FETCH_HOME_PAGE_START","fetchHomePageStart","ApiServer","MockServer","storage","token","tokenSetTime","defaultFavicon","tokenExpireTime","defaultSignature","toggleUserLoading","on","myInfoFetched","init","userInfoFetched","categoriesFetched","categoryDetailsFetched","highQuality","all","announce","connect","component","inProcess","dispatch","bindActionCreators","$actions","actions","Loading","SignCard","favicon","styles","input","bg","shiroha","Login","handleLogin","Form","useForm","shape","HomeOutlined","onFinish","values","Item","required","Password","LoginOutlined","htmlType","NowForm","step","alia","useState","strength","setStrength","text","rules","pattern","min","onChange","e","target","getFieldValue","validator","rule","Promise","reject","resolve","steps","percent","strokeWidth","format","v","Math","ceil","strokeColor","CheckOutlined","Register","tryRegister","waiting","setStep","isLastStep","handleSubmit","atri","regSteps","phoneNumber","onFinishFailed","warn","disabled","LeftOutlined","submit","RightOutlined","header","userHeader","cateHeader","inboxHeader","postHeader","favoriteHeader","historyHeader","themeHeader","noticeHeader","Request","exec","axios","this","method","moderator","mid","param","keyword","privacyShow","notice","theme","favorite","post","TestApp","fetchInfo","setToken","setData","span","JSON","stringify","api","testGetMethod","random","toString","Homepage","lazy","User","PostPage","CategoryPage","Index","scrollTo","routerRender","Component","fallback","exact","withRouter","worker","watcher","action","put","getMyInfo","code","$history","getManage","res2","body2","act","countAllUnchecked","res3","map","act2","success","takeLatest","callback","update","myInbox","senderId","f","myFavorite","deleteFavorite","UserSagas","FetchMyInfo","LoginStart","RegisterStart","UpdateUserInfoStart","FetchMyInbox","FetchMyFavorite","func","handler","delay","time","getInfoById","res1","ComponentSagas","WaitProcess","top10ByVisitsCount","res_new","top10ByReplyCount","res_rep","$new","$rep","getAll","processTheme","processAnnounce","$id","fail","tag","$action","pin","PageSagas","FetchHomePage","FetchCategories","FetchAllThemes","Sagas","importSagas","saga","call","temp","useStorage","sessionStorage","localStorage","setItem","Date","now","hasToken","s","timestamp","parseInt","getItem","removeToken","removeItem","userInit","sysMsg","mails","favorites","homepageInit","footer","categories","newTheme","newReply","announcement","lastUpdate","hasLoaded","componentInit","userCenter","viewInit","regForm","categoryInit","loaded","reducers","combineReducers","state","homepage","view","_history","documentElement","scrollTop","$push","createHistory","createSagaMiddleware","middleWares","middlewareEnhancer","applyMiddleware","enhancer","createStore","run","subscribe","getState","interceptors","request","use","config","headers","Authorization","defaults","withCredentials","statement"],"mappings":"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","file":"static/js/main.444ca3a3.chunk.js","sourcesContent":["\r\nexport const root = '/';\r\n\r\nexport const login = '/login';\r\n\r\nexport const register = '/register';\r\n\r\nexport const search = '/search';\r\n\r\nexport const manager = '/manager';\r\n\r\nexport const report = '/report';\r\n\r\nexport const category = '/category/:cateId';\r\n\r\nexport const theme = '/theme/:themeId';\r\n\r\nexport const announcement = '/announcement/:announceId';\r\n\r\nexport const user = '/user/:uid/';\r\n\r\nexport const me = '/user/';\r\n\r\nexport const $user = (uid: string, hash?: string) => `/user/${uid}/#/` + (hash ?? '');\r\n\r\nexport const $category = (cid: number) => `/category/${cid}`;\r\n\r\nexport const $404 = '/';\r\n","import React, {CSSProperties, FC, memo} from 'react';\r\nimport '../styles/components/Card.scss';\r\n\r\ninterface IProps {\r\n    className?: string | undefined;\r\n    style?: Partial<CSSProperties> | undefined;\r\n    children?: JSX.Element | never[];\r\n}\r\n\r\nconst Card: FC<IProps> = memo((props) => {\r\n\r\n    const $class = props.className ?? ''\r\n    const $style = props.style ?? {};\r\n\r\n    return (\r\n        <div id='comp-card' className={$class} style={$style}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Card;\r\n","import {Spin, Tag} from \"antd\";\r\nimport React from \"react\";\r\nimport Card from \"../components/Card\";\r\n\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\n\r\nexport const tags = [\r\n    <Tag>游客</Tag>,\r\n    <Tag color='green'>用户</Tag>,\r\n    <Tag color='red'>版主</Tag>,\r\n    <Tag color='geekblue'>管理员</Tag>,\r\n    <Tag color='gold'>开发者</Tag>,\r\n]\r\n\r\nexport const loading$1 = <div style={{\r\n    width: '100vw', height: '100vh', display: 'flex', alignItems: 'center',\r\n    justifyContent: 'center'}}><Card style={{\r\n    width: '300px', height: '300px', fontSize: '120px',\r\n}}><LoadingOutlined /></Card></div>\r\n\r\nconst $style = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    width: '100%',\r\n    height: '100vh',\r\n}\r\n\r\nconst icon = <LoadingOutlined style={{ fontSize: '72px'}} spin />;\r\nexport const LoadingIcon = <div style={$style}><Spin indicator={icon}/></div>;\r\n","import React, {FC, HTMLProps, memo} from \"react\";\r\n\r\nimport '../styles/components/BgImg.scss';\r\n\r\ninterface IProps {\r\n    src: string;\r\n    zIndex?: number;\r\n}\r\n\r\nconst BgImg: FC<IProps & HTMLProps<any>> = memo((props) => {\r\n    return (\r\n        <div id='comp-bg-img' className={`${props.className}`}\r\n             style={{\r\n             backgroundImage: `url(${props.src})`,\r\n             zIndex: props.zIndex ?? 0,}} />\r\n    );\r\n});\r\n\r\nexport default BgImg;\r\n","import { createFromIconfontCN } from '@ant-design/icons';\r\nimport { iconFontSrc } from \"../configs/consts\";\r\n\r\nconst IconFont = createFromIconfontCN({scriptUrl: iconFontSrc});\r\n\r\nexport default IconFont;\r\n","import React, {FC, memo} from 'react';\r\nimport IconFont from \"./IconFont\";\r\nimport '../styles/components/IconItem.scss';\r\n\r\nimport {Badge} from 'antd';\r\n\r\ninterface IProps {\r\n    className?: string | undefined;\r\n    size?: 'S' | 'M' | 'L' | undefined;\r\n    type: string;\r\n    title: string;\r\n    msg?: number | undefined;\r\n    onClick?: () => void;\r\n}\r\n\r\nconst IconItem: FC<IProps> = memo(props => {\r\n\r\n    const $class = props.className ?? '';\r\n    const $size = `size-${props.size ?? 'M'}`;\r\n    const $msg = props.msg ?? 0;\r\n    const $span = props.onClick ?? (() => {});\r\n\r\n    return (\r\n        <div id='comp-icon-item' className={$class} onClick={$span}>\r\n          <div className={`container ${$size}`}>\r\n            <Badge count={$msg}>\r\n              <IconFont type={props.type} className='icon' />\r\n            </Badge>\r\n            <div className='title'>{props.title}</div>\r\n          </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default IconItem;\r\n","import React, {CSSProperties, FC, memo} from \"react\";\r\n\r\nimport '../styles/components/ListItem.scss';\r\nimport IconFont from \"./IconFont\";\r\n\r\ninterface IProps {\r\n    className?: string | undefined;\r\n    size?: 'S' | 'M' | 'L' | undefined;\r\n    type?: string;\r\n    label: string;\r\n    onClick?: () => void;\r\n    selected?: boolean;\r\n    href?: string;\r\n    key?: string;\r\n    style?: Partial<CSSProperties>;\r\n}\r\n\r\nconst ListItem: FC<IProps> = memo(props => {\r\n\r\n    const $class = props.className ?? '';\r\n    const $size = `size-${props.size ?? 'M'}`;\r\n    const $span = props.onClick ?? (() => {});\r\n    const $href = (props.key === props.href ?? '') || (props.selected ?? false);\r\n    const $style = props.style ?? {};\r\n\r\n    return (\r\n      <div id='comp-list-item' className={$class} onClick={$span} style={$style}>\r\n        <div className={`container ${$size} ${($href ? ' selected' : '')}`}>\r\n          {props.type && <IconFont type={props.type} className='icon'/>}\r\n          <div className='label'>{props.label}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n});\r\n\r\nexport default ListItem;\r\n","import React, {FC, memo} from \"react\";\r\n\r\nimport '../styles/components/UserInfoCard.scss';\r\nimport * as url from '../configs/url';\r\n\r\nimport {Avatar, message} from 'antd';\r\nimport {defaultAvatar} from \"../configs/consts\";\r\nimport {getUserGroup} from \"../utils/tools\";\r\nimport {useHistory} from \"react-router\";\r\nimport IconItem from \"./IconItem\";\r\nimport ListItem from \"./ListItem\";\r\nimport {UserStore} from \"../redux/reducers/user\";\r\nimport {tags} from '../utils/items';\r\n\r\ninterface IProps {\r\n    className?: string | undefined;\r\n    store: UserStore;\r\n    cb: {\r\n        logout: () => void;\r\n    };\r\n}\r\n\r\nconst UserInfoCard: FC<IProps> = memo(({className, store, cb}) => {\r\n\r\n    const history = useHistory();\r\n    const {info, manageCate, inbox} = store;\r\n    const group = getUserGroup(info, manageCate);\r\n\r\n    return (\r\n      <div id='comp-user-info-card' className={className??''}>\r\n        <div className='container'>\r\n          <Avatar src={info.avatar ?? defaultAvatar} size={64}\r\n                  className='avatar'/>\r\n          <div className='nickname'>{info.nickname ?? '游客'}</div>\r\n          <div className='username'>{`用户名： ${info.username}`}</div>\r\n          <div className='group'>{tags[group]}</div>\r\n          {!!group && <div className='entries'>\r\n            <IconItem type='if-inbox' title='私信' className='item' msg={inbox}\r\n                      onClick={() => history.push('/user/#/message')}/>\r\n            <IconItem type='if-todo' title='待处理' className='item' msg={0}\r\n                      onClick={() => message.info('这项功能不确定是否存在……')}/>\r\n          </div>}\r\n            {group ? <div className='menu'>\r\n              <ListItem label='个人中心' type='if-home' onClick={() => {history.push(url.me)}}/>\r\n              <ListItem label='管理中心' type='if-center' onClick={() => {\r\n              }}/>\r\n              <ListItem label='退出登录' type='if-exit' onClick={cb.logout}/>\r\n            </div> : <div className='menu' style={{margin: '8px 0 0 0'}}>\r\n              <ListItem label='登录' type='if-step' onClick={() => history.push(url.login)} />\r\n            </div>}\r\n        </div>\r\n      </div>\r\n    )\r\n})\r\n\r\nexport default UserInfoCard;\r\n","import React, {FC, HTMLProps, memo} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\n\r\nimport '../styles/components/TopBar.scss';\r\nimport logo from '../images/favicon.svg';\r\nimport * as url from '../configs/url';\r\n\r\nimport {Input, message, Tooltip, Popover, notification} from 'antd';\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\nimport IconFont from \"./IconFont\";\r\nimport UserInfoCard from \"./UserInfoCard\";\r\nimport {appName} from \"../configs/consts\";\r\nimport {UserStore} from \"../redux/reducers/user\";\r\n\r\ninterface IProps {\r\n    store: UserStore;\r\n    loggedIn: boolean;\r\n    logout: any;\r\n}\r\n\r\nconst SearchBar: FC<{} & HTMLProps<any>> = memo((props) => {\r\n\r\n    const trySearch = (value: string) => {\r\n        // TODO: 搜索逻辑\r\n        if (value !== '') message.info(`将要搜索 \"${value}\"`)\r\n    }\r\n\r\n    return (\r\n        <div className={`comp-search-bar ${props.className}`}>\r\n            <Input.Search placeholder='全局搜索……' className='input-search' onSearch={trySearch}/>\r\n        </div>\r\n    )\r\n})\r\n\r\nconst TopBar: FC<IProps> = memo((props) => {\r\n\r\n    const {loggedIn, store} = props;\r\n    const history = useHistory();\r\n\r\n    const backToHome = () => history.push('/')\r\n\r\n    const infoCardCB = {\r\n        logout: () => {\r\n            notification.info({\r\n                message: '已退出登录',\r\n                description: `${store.info.nickname} 已经成功退出登录，返回登陆页面`,\r\n            });\r\n            props.logout();\r\n            history.push(url.login);\r\n        },\r\n    }\r\n\r\n    return <div id='comp-top-bar'>\r\n      <div className='container'>\r\n        <span className='logo-title' onClick={backToHome}>\r\n          <Tooltip placement='bottomLeft' title={appName}>\r\n            <img src={logo} alt='いいね！' className='favicon'/>\r\n          </Tooltip>\r\n          <Tooltip placement='bottom' title='回到首页'>\r\n            <div className='title'>{appName}</div>\r\n          </Tooltip>\r\n        </span>\r\n        <SearchBar className='search-bar'/>\r\n        <div className='entry-groups'>\r\n          <Popover trigger='click' placement=\"bottomRight\" className='user-card'\r\n                   content={<UserInfoCard store={store} cb={infoCardCB} />}>\r\n            <IconFont type='if-user' className='user-entry' />\r\n          </Popover>\r\n          <div className='loading'>{store.isLoading && <LoadingOutlined />}</div>\r\n        </div>\r\n      </div>\r\n    </div>;\r\n})\r\n\r\nexport default TopBar;\r\n","import React, {FC, memo} from \"react\";\r\nimport {appName, appVersion} from \"../configs/consts\";\r\n\r\nimport '../styles/components/Footer.scss';\r\n\r\ninterface IProps {\r\n    className?: string\r\n}\r\n\r\nconst Footer: FC<IProps> = memo(props => {\r\n\r\n    const $class = props.className;\r\n\r\n    return (\r\n        <div id='comp-footer' className={$class}>\r\n            <div className='text-field'>{appName} {appVersion} @开发中版本</div>\r\n            <div className='text-field'>Project Minazuki 所属</div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Footer;\r\n","import React, {createContext, FC, memo, useEffect} from \"react\";\r\n\r\nimport {PageFrameProps} from \"../containers/PageFrame\";\r\nimport '../styles/components/PageFrame.scss';\r\nimport TopBar from \"./TopBar\";\r\nimport {RouteComponentProps} from \"react-router\";\r\n\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\nimport {Spin} from 'antd';\r\nimport Footer from \"./Footer\";\r\n\r\nexport const RouteContext = createContext({} as RouteComponentProps<any>);\r\n\r\nconst PageFrame: FC<PageFrameProps> = memo((props) => {\r\n\r\n    const toTopBar = {\r\n        loggedIn: props.loggedIn,\r\n        store: props.userInfo,\r\n        logout: props.logout,\r\n    }\r\n\r\n    const route = {\r\n        history: props.history,\r\n        match: props.match,\r\n        location: props.location,\r\n    }\r\n\r\n    const $style = {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        width: '100%',\r\n        height: '100vh',\r\n    }\r\n\r\n    const unload = props.loggedIn && !props.userInfo.info._id;\r\n    const path = props.location.pathname + props.location.hash;\r\n\r\n    const icon = <LoadingOutlined style={{ fontSize: '72px'}} spin />;\r\n    const loading = <div style={$style}><Spin indicator={icon}/></div>;\r\n\r\n    useEffect(() => {\r\n        console.log(route);\r\n        if (unload) {\r\n            props.reloadInfo(path, false, '久 等 了');\r\n        }\r\n    }, [props.loggedIn]);\r\n\r\n    return (\r\n        <div id='comp-page-frame'>\r\n            <TopBar {...toTopBar}/>\r\n            <RouteContext.Provider value={route}>\r\n                {unload ? loading : props.children}\r\n            </RouteContext.Provider>\r\n            <Footer />\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default PageFrame;\r\n","/**\r\n *\r\n * @param dateString 'YYYY-MM-DD hh:mm:ss' 型的日期字符串\r\n *\r\n * @desc  进行字符串修改，创建 Date 对象\r\n */\r\nexport function stringToDate(dateString: string) {\r\n    return new Date(dateString.replace(/-/g, '/'))\r\n}\r\n\r\nexport function stringConvert(date: string) {\r\n    if (date === undefined) return '';\r\n    return date.replace(/-/g, '/')\r\n        .replace(/T/g, ' ')\r\n        .substr(0, 19);\r\n}\r\n\r\nexport function stringToDateBackend(date: string) {\r\n    const s = date.replace(/-/g, '/')\r\n        .replace(/T/g, ' ')\r\n        .substr(0, 19);\r\n    return new Date(s);\r\n}\r\n","import {store} from \"../App\";\r\nimport {developerName, pwdMinLength} from \"../configs/consts\";\r\nimport {Announcement, Category, Theme, User} from \"../configs/types\";\r\nimport {stringConvert} from \"./DateTimes\";\r\nimport md5 from 'js-md5';\r\n\r\n/**\r\n *\r\n * @param param\r\n *\r\n * @deprecated 将在 axios 中全局设置统一认证请求头\r\n */\r\nexport function withToken(param: object) {\r\n    const token = store.getState().user.token ?? '';\r\n    return {...param, token};\r\n}\r\n\r\n/**\r\n *\r\n * 用户新密码校验\r\n *\r\n * @param pwd 密码字符串\r\n * @return      密码分析结果\r\n */\r\nexport function testPassWord(pwd: string){\r\n    return {\r\n        hasDigit: /\\d/.test(pwd),\r\n        hasLower: /[a-z]/.test(pwd),\r\n        hasUpper: /[A-Z]/.test(pwd),\r\n        hasSymbol: /\\W|_/.test(pwd),\r\n        hasIllegal: /\\n|\\f|\\r|\\t|\\v|\\s/.test(pwd),\r\n        metLength: pwd.length >= pwdMinLength,\r\n    }\r\n}\r\n\r\ntype pwdTestResult = ReturnType<typeof testPassWord>;\r\ntype pwsStrength = -1 | 0 | 1 | 2 | 3 | 4 | 5;\r\n\r\nexport function analyzePassWord(res: pwdTestResult): pwsStrength {\r\n    let value = 0;\r\n    for (let key in res)\r\n        if (res.hasOwnProperty(key))\r\n            switch (key) {\r\n                case 'hasDigit': case 'hasLower': case 'hasUpper':\r\n                    value += res[key] ? 1 : 0; break;\r\n                case 'hasSymbol': value += res[key] ? 2 : 0; break;\r\n            }\r\n    if (value > 5) value = 5;\r\n    return (res.hasIllegal || !res.metLength) ? -1 : value as pwsStrength;\r\n}\r\n\r\nexport const checkPassWord = (pwd: string) =>\r\n    analyzePassWord(testPassWord(pwd));\r\n\r\ntype UserType = 0 | 1 | 2 | 3 | 4;\r\n\r\nexport function getUserGroup(user: User, cate?: Category[]): UserType {\r\n    if (user._id === undefined) return 0;\r\n    if (!!developerName.find(value => value === user.username)) return 4;\r\n    if (user.isAdmin) return 3;\r\n    if (!!cate) return cate.length ? 2 : 1;\r\n    if (user.manageCateId === null) return 1;\r\n    else return 2;\r\n}\r\n\r\nexport function _getUserGroup(user: User, cnt?: number): UserType {\r\n    const $cnt = cnt ?? user.manageCateId ?? 0;\r\n    if (user._id === undefined) return 0;\r\n    if (!!developerName.find(value => value === user.username)) return 4;\r\n    if (user.isAdmin) return 3;\r\n    return !!$cnt ? 2 : 1;\r\n}\r\n\r\nexport function cateToCate(obj: any): Category {\r\n    return {\r\n        avatar: obj.coverUrl,\r\n        createTime: stringConvert(obj.createdAt),\r\n        desc: obj.description,\r\n        _id: obj.id,\r\n        name: obj.name,\r\n        status: obj.status,\r\n        updateTime: stringConvert(obj.updatedAt),\r\n        visits: obj.visitsCount,\r\n    }\r\n}\r\n\r\nexport function userToUser(body: any): User {\r\n    return {\r\n        ...body, _id: body.id,\r\n        createdAt: stringConvert(body.createdAt),\r\n        lastSignIn: stringConvert(body.lastSignIn),\r\n        avatar: body.avatarUrl,\r\n    }\r\n}\r\n\r\nexport function convertGravatar(email: string): string {\r\n    const mailto = email.trim().toLowerCase();\r\n    const hash = md5(mailto);\r\n    return `https://www.gravatar.com/avatar/${hash}`;\r\n}\r\n\r\nexport function themeToTheme(body: any): Theme {\r\n    return {\r\n        ...body,\r\n        cateId: body?.categoryId,\r\n        createdTime: stringConvert(body?.createdAt),\r\n        authorId: body?.creatorId,\r\n        _id: body?.id,\r\n        latestReplyTime: stringConvert(body?.latestReplyAt),\r\n        replies: body?.replyCount,\r\n        pinned: body?.top,\r\n        visits: body?.visitsCount,\r\n    }\r\n}\r\n\r\nexport function noticeToAnnouncement(body: any): Announcement {\r\n    return {\r\n        ...body,\r\n        _id: body?.id,\r\n        cateId: body?.categoryId,\r\n        authorId: body?.creatorId,\r\n        createTime: stringConvert(body?.createdAt),\r\n        updateTime: stringConvert(body?.updatedAt),\r\n    }\r\n}\r\n\r\nexport function uniqueArray<T>(arr: T[]): T[] {\r\n    let $$: T[] = [];\r\n    for (const ii of arr)\r\n        if ($$.indexOf(ii) == -1)\r\n            $$.push(ii);\r\n    return $$;\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/bg-atri.cf743952.png\";","module.exports = __webpack_public_path__ + \"static/media/bg-shiroha.1b367b7e.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './styles/index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import {RegisterForm, UpdateUserInfoForm} from \"../../configs/types\";\r\n\r\nexport const FETCH_MY_INFO_START = 'FETCH_MY_INFO_START';\r\nexport type FETCH_MY_INFO_START = typeof FETCH_MY_INFO_START;\r\n\r\nexport interface FetchMyInfoStart {\r\n    type: FETCH_MY_INFO_START;\r\n    redirect?: string;\r\n    isFirstTime?: boolean;\r\n    title?: string\r\n}\r\n\r\nexport function fetchMyInfoStart(\r\n    to?: string,\r\n    isFirstTime?: boolean,\r\n    title?: string\r\n): FetchMyInfoStart {\r\n    return {\r\n        type: FETCH_MY_INFO_START,\r\n        redirect: to,\r\n        isFirstTime, title\r\n    }\r\n}\r\n\r\nexport const LOGIN_START = 'LOGIN_START';\r\nexport type LOGIN_START = typeof LOGIN_START;\r\n\r\nexport interface LoginStart {\r\n    type: LOGIN_START;\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport function loginStart(username: string, password: string): LoginStart {\r\n    return {type: LOGIN_START, username, password}\r\n}\r\n\r\nexport const WAIT_PROCESS = 'WAIT_PROCESS';\r\nexport type WAIT_PROCESS = typeof WAIT_PROCESS;\r\n\r\nexport interface WaitProcess {\r\n    type: WAIT_PROCESS;\r\n    time: number;\r\n    handler?: Function;\r\n}\r\n\r\nexport function waitProcess(\r\n    time: number,\r\n    handler?: Function\r\n): WaitProcess {\r\n    return {type: WAIT_PROCESS, time, handler};\r\n}\r\n\r\nexport const REGISTER_START = 'REGISTER_START';\r\nexport type REGISTER_START = typeof REGISTER_START;\r\n\r\nexport interface RegisterStart {\r\n    type: REGISTER_START;\r\n    form: RegisterForm;\r\n    cb?: () => void;\r\n}\r\n\r\nexport function registerStart(form: RegisterForm, cb?: () => void): RegisterStart {\r\n    return {type: REGISTER_START, form, cb};\r\n}\r\n\r\n\r\nexport const FETCH_USER_INFO_START = 'FETCH_USER_INFO_START';\r\nexport type FETCH_USER_INFO_START = typeof FETCH_USER_INFO_START;\r\n\r\nexport interface FetchUserInfoStart {\r\n    type: FETCH_USER_INFO_START;\r\n    uid: number;\r\n}\r\n\r\nexport function fetchUserInfoStart(uid: number): FetchUserInfoStart {\r\n    return {type: FETCH_USER_INFO_START, uid};\r\n}\r\n\r\n\r\nexport const UPDATE_USER_INFO_START = 'UPDATE_USER_INFO_START'\r\nexport type UPDATE_USER_INFO_START = typeof UPDATE_USER_INFO_START;\r\n\r\nexport interface UpdateUserInfoStart {\r\n    type: UPDATE_USER_INFO_START;\r\n    data: UpdateUserInfoForm;\r\n    cb?: () => void;\r\n}\r\n\r\nexport function updateUserInfoStart(data: UpdateUserInfoForm, cb?: () => void): UpdateUserInfoStart {\r\n    return {type: UPDATE_USER_INFO_START, data, cb};\r\n}\r\n\r\n\r\nexport const FETCH_MY_INBOX_START = 'FETCH_MY_INBOX_START';\r\nexport type FETCH_MY_INBOX_START  = typeof FETCH_MY_INBOX_START;\r\n\r\nexport interface FetchMyInboxStart {\r\n    type: FETCH_MY_INBOX_START;\r\n    uid: number;\r\n}\r\n\r\nexport function fetchMyInboxStart(uid: number): FetchMyInboxStart {\r\n    return {type: FETCH_MY_INBOX_START, uid};\r\n}\r\n\r\n\r\nexport const FETCH_MY_FAVORITE_START = 'FETCH_MY_FAVORITE_START';\r\nexport type FETCH_MY_FAVORITE_START  = typeof FETCH_MY_FAVORITE_START;\r\n\r\nexport interface FetchMyFavoriteStart {\r\n    type: FETCH_MY_FAVORITE_START;\r\n}\r\n\r\nexport function fetchMyFavoriteStart(): FetchMyFavoriteStart {\r\n    return {type: FETCH_MY_FAVORITE_START};\r\n}\r\n\r\n\r\nexport const DELETE_FAVORITE_START = 'DELETE_FAVORITE_START';\r\nexport type DELETE_FAVORITE_START  = typeof DELETE_FAVORITE_START;\r\n\r\nexport interface DeleteFavoriteStart {\r\n    type: DELETE_FAVORITE_START;\r\n    fid: number;\r\n}\r\n\r\nexport function deleteFavoriteStart(fid: number): DeleteFavoriteStart {\r\n    return {type: DELETE_FAVORITE_START, fid};\r\n}\r\n\r\n\r\nexport const FETCH_CATEGORIES_START = 'FETCH_CATEGORIES_START';\r\nexport type FETCH_CATEGORIES_START  = typeof FETCH_CATEGORIES_START ;\r\n\r\nexport interface FetchCategoriesStart {\r\n    type: FETCH_CATEGORIES_START;\r\n}\r\n\r\nexport function fetchCategoriesStart(): FetchCategoriesStart {\r\n    return {type: FETCH_CATEGORIES_START };\r\n}\r\n\r\n\r\nexport const FETCH_ALL_THEMES_START = 'FETCH_ALL_THEMES_START';\r\nexport type FETCH_ALL_THEMES_START = typeof FETCH_ALL_THEMES_START;\r\n\r\nexport interface FetchAllThemesStart {\r\n    type: FETCH_ALL_THEMES_START;\r\n    cid: number;\r\n}\r\n\r\nexport function fetchAllThemesStart(cid: number): FetchAllThemesStart {\r\n    return {type: FETCH_ALL_THEMES_START, cid};\r\n}\r\n\r\nexport const FETCH_CATEGORY_DETAIL = 'FETCH_CATEGORY_DETAIL';\r\nexport type FETCH_CATEGORY_DETAIL = typeof FETCH_CATEGORY_DETAIL;\r\n\r\nexport interface FetchCategoryDetail {\r\n    type: FETCH_CATEGORY_DETAIL;\r\n    cateId: number;\r\n}\r\n\r\nexport function fetchCategoryDetail(cid: number): FetchCategoryDetail {\r\n    return {type: FETCH_CATEGORY_DETAIL, cateId: cid};\r\n}\r\n\r\nexport const FETCH_HOME_PAGE_START = 'FETCH_HOME_PAGE_START';\r\nexport type FETCH_HOME_PAGE_START = typeof FETCH_HOME_PAGE_START;\r\n\r\nexport interface FetchHomePageStart {\r\n    type: FETCH_HOME_PAGE_START;\r\n}\r\n\r\nexport function fetchHomePageStart(): FetchHomePageStart {\r\n    return {type: FETCH_HOME_PAGE_START};\r\n}\r\n","\r\n\r\nexport const ApiServer = 'http://47.112.128.54:8080';\r\n\r\nexport const MockServer = 'http://localhost:1919/api';\r\n\r\nexport const defaultAvatar = 'https://i.loli.net/2020/06/27/sUvTMuzBlVjAWDJ.jpg';\r\n\r\nexport const storage = {\r\n    token: 'token',\r\n    tokenSetTime: 'tokenSetTime'\r\n};\r\n\r\nexport const defaultFavicon = '';\r\n\r\nexport const tokenExpireTime = 604800000;\r\n\r\nexport const pwdMinLength = 6;\r\n\r\nexport const iconFontSrc = ['//at.alicdn.com/t/font_1917388_w7ankqb4iga.js'];\r\n\r\nexport const developerName: string[] = ['shiroha'];\r\n\r\nexport const appName = 'Minazuki BBS';\r\n\r\nexport const appVersion = 'dev-ver. 0.3';\r\n\r\nexport const defaultSignature = '这个人很懒，什么也没有留下。';\r\n","module.exports = __webpack_public_path__ + \"static/media/favicon.c536d3f1.svg\";","import {Favorite, Mail, Theme, User, Notification, Category, Announcement, Tag} from \"../../configs/types\";\r\nimport {defaultAvatar} from \"../../configs/consts\";\r\n\r\n\r\nexport const LOGIN = 'LOGIN';\r\nexport type LOGIN = typeof LOGIN;\r\n\r\nexport interface Login {\r\n    type: LOGIN;\r\n    token: string;\r\n}\r\n\r\nexport function login(token: string): Login {\r\n    return { type: LOGIN, token};\r\n}\r\n\r\n\r\nexport const LOGOUT = 'LOGOUT';\r\nexport type LOGOUT = typeof LOGOUT;\r\n\r\nexport interface Logout {\r\n    type: LOGOUT;\r\n}\r\n\r\nexport function logout(): Logout {\r\n    return {type: LOGOUT};\r\n}\r\n\r\n\r\nexport const TOGGLE_USER_LOADING = 'TOGGLE_USER_LOADING';\r\nexport type TOGGLE_USER_LOADING = typeof TOGGLE_USER_LOADING;\r\n\r\nexport interface ToggleUserLoading {\r\n    type: TOGGLE_USER_LOADING;\r\n    on: boolean;\r\n}\r\n\r\nexport function toggleUserLoading(on: boolean = false): ToggleUserLoading {\r\n    return {type: TOGGLE_USER_LOADING, on};\r\n}\r\n\r\n\r\nexport const MY_INFO_FETCHED = 'MY_INFO_FETCHED';\r\nexport type MY_INFO_FETCHED = typeof MY_INFO_FETCHED;\r\n\r\nexport interface MyInfoFetched {\r\n    type: MY_INFO_FETCHED;\r\n    data: User;\r\n}\r\n\r\nexport function myInfoFetched(data: Partial<User>): MyInfoFetched {\r\n    const init = {\r\n        isAdmin: false,\r\n        avatar: defaultAvatar,\r\n    } as User;\r\n    return {\r\n        type: MY_INFO_FETCHED,\r\n        data: {\r\n            ...init,\r\n            ...data\r\n        }\r\n    };\r\n}\r\n\r\n\r\nexport const MY_MESSAGE_FETCHED = 'MY_MESSAGE_FETCHED';\r\nexport type MY_MESSAGE_FETCHED = typeof MY_MESSAGE_FETCHED;\r\n\r\nexport interface MyMessageFetched {\r\n    type: MY_MESSAGE_FETCHED;\r\n    msg: Notification[];\r\n}\r\n\r\nexport function myMessageFetched(msg: Notification[]): MyMessageFetched {\r\n    return {type: MY_MESSAGE_FETCHED, msg};\r\n}\r\n\r\n\r\n\r\nexport const PROCESS_HANDLED = 'PROCESS_HANDLED';\r\nexport type PROCESS_HANDLED = typeof PROCESS_HANDLED;\r\n\r\nexport interface ProcessHandled {\r\n    type: PROCESS_HANDLED;\r\n}\r\n\r\nexport function processHandled(): ProcessHandled {\r\n    return {type: PROCESS_HANDLED};\r\n}\r\n\r\nexport const PROCESS_STARTED = 'PROCESS_STARTED';\r\nexport type PROCESS_STARTED = typeof PROCESS_STARTED;\r\n\r\nexport interface ProcessStarted {\r\n    type: PROCESS_STARTED;\r\n}\r\n\r\nexport function processStarted(): ProcessStarted {\r\n    return {type: PROCESS_STARTED};\r\n}\r\n\r\n\r\nexport const RECOMMEND_FETCHED = 'RECOMMEND_FETCHED';\r\nexport type RECOMMEND_FETCHED = typeof RECOMMEND_FETCHED;\r\n\r\nexport interface RecommendFetched {\r\n    type: RECOMMEND_FETCHED;\r\n    newTheme: Theme[];\r\n    newReply: Theme[];\r\n}\r\n\r\nexport function recommendFetched(\r\n    newTheme: Theme[],\r\n    newReply: Theme[]\r\n): RecommendFetched {\r\n    return {\r\n        type: RECOMMEND_FETCHED,\r\n        newTheme, newReply,\r\n    };\r\n}\r\n\r\nexport const REGISTER_FORM_FILLED = 'REGISTER_FORM_FILLED';\r\nexport type REGISTER_FORM_FILLED = typeof REGISTER_FORM_FILLED;\r\n\r\nexport interface RegisterFormFilled {\r\n    type: REGISTER_FORM_FILLED;\r\n    value: object;\r\n}\r\n\r\nexport function registerFormFilled(value: object): RegisterFormFilled {\r\n    return {type: REGISTER_FORM_FILLED, value}\r\n}\r\n\r\n\r\nexport const MANAGE_CATEGORIES_FETCHED = 'MANAGE_CATEGORIES_FETCHED';\r\nexport type MANAGE_CATEGORIES_FETCHED = typeof MANAGE_CATEGORIES_FETCHED;\r\n\r\nexport interface ManageCategoriesFetched {\r\n    type: MANAGE_CATEGORIES_FETCHED;\r\n    data: [],\r\n}\r\n\r\nexport function manageCategoriesFetched(data: []): ManageCategoriesFetched {\r\n    return {type: MANAGE_CATEGORIES_FETCHED, data};\r\n}\r\n\r\n\r\nexport const INBOX_COUNT_FETCHED = 'INBOX_COUNT_FETCHED';\r\nexport type INBOX_COUNT_FETCHED = typeof INBOX_COUNT_FETCHED;\r\n\r\nexport interface InboxCountFetched {\r\n    type: INBOX_COUNT_FETCHED;\r\n    count: number;\r\n}\r\n\r\nexport function inboxCountFetched(cnt: number): InboxCountFetched {\r\n    return {type: INBOX_COUNT_FETCHED, count: cnt,}\r\n}\r\n\r\nexport const USER_INFO_FETCHED = 'USER_INFO_FETCHED';\r\nexport type USER_INFO_FETCHED = typeof USER_INFO_FETCHED;\r\n\r\nexport interface UserInfoFetched {\r\n    type: USER_INFO_FETCHED;\r\n    id: number;\r\n    data: User;\r\n}\r\n\r\nexport function userInfoFetched(id: number, data: User): UserInfoFetched {\r\n    return {type: USER_INFO_FETCHED, id, data};\r\n}\r\n\r\n\r\nexport const MY_INBOX_FETCHED = 'MY_INBOX_FETCHED';\r\nexport type MY_INBOX_FETCHED = typeof MY_INBOX_FETCHED;\r\n\r\nexport interface MyInboxFetched {\r\n    type: MY_INBOX_FETCHED;\r\n    data: Mail[];\r\n}\r\n\r\nexport function myInboxFetched(data: Mail[]) {\r\n    return {type: MY_INBOX_FETCHED, data};\r\n}\r\n\r\n\r\nexport const MY_FAVORITE_FETCHED = 'MY_FAVORITE_FETCHED';\r\nexport type MY_FAVORITE_FETCHED = typeof MY_FAVORITE_FETCHED;\r\n\r\nexport interface MyFavoriteFetched {\r\n    type: MY_FAVORITE_FETCHED;\r\n    data: Favorite[];\r\n}\r\n\r\nexport function myFavoriteFetched(data: Favorite[]): MyFavoriteFetched {\r\n    return {type: MY_FAVORITE_FETCHED, data}\r\n}\r\n\r\n\r\nexport const HOME_PAGE_FETCHED = 'HOME_PAGE_FETCHED';\r\nexport type HOME_PAGE_FETCHED = typeof HOME_PAGE_FETCHED;\r\n\r\nexport interface HomePageFetched {\r\n    type: HOME_PAGE_FETCHED;\r\n    newTheme: Theme[];\r\n    newReply: Theme[];\r\n}\r\n\r\nexport function homePageFetched(\r\n    newTheme: Theme[],\r\n    newReply: Theme[],\r\n): HomePageFetched {\r\n    return {type: HOME_PAGE_FETCHED, newReply, newTheme}\r\n}\r\n\r\n\r\nexport const CATEGORIES_FETCHED = 'CATEGORIES_FETCHED';\r\nexport type CATEGORIES_FETCHED = typeof CATEGORIES_FETCHED;\r\n\r\nexport interface CategoriesFetched {\r\n    type: CATEGORIES_FETCHED;\r\n    data: Category[];\r\n};\r\n\r\nexport function categoriesFetched(data: Category[]): CategoriesFetched {\r\n    return {type: CATEGORIES_FETCHED, data};\r\n}\r\n\r\n\r\nexport const CATEGORY_DETAILS_FETCHED = 'CATEGORY_DETAILS_FETCHED';\r\nexport type CATEGORY_DETAILS_FETCHED = typeof CATEGORY_DETAILS_FETCHED;\r\n\r\nexport interface CategoryDetailsFetched {\r\n    type: CATEGORY_DETAILS_FETCHED;\r\n    info: Category;\r\n    highQuality: Theme[];\r\n    pinned: Theme[];\r\n    all: Theme[];\r\n    announce: Announcement[];\r\n    tags: Tag[];\r\n}\r\n\r\nexport function categoryDetailsFetched(\r\n    info: Category,\r\n    highQuality: Theme[],\r\n    pinned: Theme[],\r\n    all: Theme[],\r\n    announce: Announcement[],\r\n    tags: Tag[],\r\n): CategoryDetailsFetched {\r\n    return {\r\n        type: CATEGORY_DETAILS_FETCHED,\r\n        info, highQuality, pinned,\r\n        all, announce, tags\r\n    }\r\n}\r\n\r\nexport const HOMEPAGE_IS_LOADED = 'HOMEPAGE_IS_LOADED';\r\nexport type HOMEPAGE_IS_LOADED  = typeof HOMEPAGE_IS_LOADED;\r\n\r\nexport interface HomepageIsLoaded {\r\n    type: HOMEPAGE_IS_LOADED;\r\n    on: boolean;\r\n}\r\n\r\nexport function homepageIsLoaded(on: boolean): HomepageIsLoaded {\r\n    return {type: HOMEPAGE_IS_LOADED, on};\r\n}\r\n","import {connect} from \"react-redux\";\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport {StoreState} from \"../redux/reducers\";\r\nimport {RouteComponentProps} from \"react-router\";\r\n\r\nimport PageFrame from \"../components/PageFrame\";\r\n\r\nimport * as $actions from '../redux/actions/async';\r\nimport * as actions from '../redux/actions/';\r\n\r\nconst mapStateToProps = ({\r\n    user,\r\n    component: {inProcess}\r\n}: StoreState) => ({\r\n    loggedIn: !!user.token,\r\n    userInfo: user,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\r\n    reloadInfo: $actions.fetchMyInfoStart,\r\n    logout: actions.logout,\r\n}, dispatch)\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport type PageFrameProps = StateProps & DispatchProps & RouteComponentProps;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PageFrame);\r\n","import {ApiServer, MockServer} from './consts';\r\nimport axios from 'axios';\r\n\r\nconst header = (!!1 ? ApiServer : MockServer);\r\nconst userHeader = `${header}/user`;\r\nconst cateHeader = `${header}/category`;\r\nconst inboxHeader = `${header}/inbox`;\r\nconst postHeader = `${header}/post`;\r\nconst favoriteHeader = `${header}/favorite`;\r\nconst historyHeader = `${header}/historyViewed`;\r\nconst themeHeader = `${header}/theme`;\r\nconst noticeHeader = `${header}/notice`;\r\n\r\ninterface AxiosRequest {\r\n    method: RequestMethod;\r\n    url: string;\r\n    data?: object;\r\n}\r\n\r\ntype RequestMethod = `GET` | 'POST' | 'DELETE';\r\n\r\nexport class Request {\r\n\r\n    body: AxiosRequest;\r\n\r\n    constructor(desc: AxiosRequest) {\r\n        this.body = desc;\r\n    }\r\n\r\n    exec = () => axios(this.body);\r\n\r\n}\r\n\r\nexport namespace test {\r\n\r\n    export const testGetMethod = () => new Request({\r\n        method: 'GET', url: `${MockServer}/test/testGetMethod`\r\n    });\r\n\r\n    export const fetchMyInfo = () => new Request({\r\n        method: 'GET', url: `${MockServer}/user/me`\r\n    });\r\n\r\n    export const login = () => new Request({\r\n        method: 'GET', url: `${MockServer}/user/login`\r\n    });\r\n\r\n    export const getUserInfo = (uid: string) => new Request({\r\n        method: 'GET', url: `${header}/user/getInfo/${uid}`\r\n    });\r\n\r\n}\r\n\r\nexport namespace category {\r\n\r\n    export namespace moderator {\r\n\r\n        export const getByCateId = (id: string) => new Request({\r\n            method: 'GET', url: `${cateHeader}/${id}/moderator`\r\n        });\r\n\r\n        export const dismissById = (cid: string, mid: string) => new Request({\r\n            method: 'DELETE', url: `${cateHeader}/${cid}/moderator/${mid}`\r\n        });\r\n    }\r\n\r\n    export const getOpening = () => new Request({\r\n        method: 'GET',  url: `${cateHeader}`\r\n    });\r\n\r\n    export const getInfoById = (id: string) => new Request({\r\n        method: 'GET', url: `${cateHeader}/${id}`\r\n    });\r\n\r\n    export const deleteById = (id: string) => new Request({\r\n        method: 'DELETE', url: `${cateHeader}/${id}`\r\n    });\r\n\r\n    export const closeById = (id: string) => new Request({\r\n        method: 'GET', url: `${cateHeader}/${id}/close`\r\n    });\r\n\r\n    export const openById = (id: string) => new Request({\r\n        method: 'GET', url: `${cateHeader}/${id}/open`\r\n    });\r\n\r\n    export const getAll = () => new Request({\r\n        method: 'GET', url: `${cateHeader}/all`\r\n    });\r\n\r\n    export const create = (param: {\r\n        name: string;\r\n        description: string;\r\n    }) => new Request({\r\n        method: 'POST',\r\n        url: `${cateHeader}/create`,\r\n        data: param\r\n    });\r\n\r\n    export const getManage = (uid?: string) => new Request({\r\n        method: 'GET', url: `${cateHeader}/manage?userId=${uid??'current'}`\r\n    });\r\n\r\n    export const update = (param: {\r\n        id: number;\r\n        name?: string;\r\n        description?: string;\r\n        coverUrl?: string;\r\n    }) => new Request({\r\n        method: 'POST',\r\n        url: `${cateHeader}/update`,\r\n        data: {\r\n            name: null,\r\n            description: null,\r\n            coverUrl: null,\r\n            ...param\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport namespace user {\r\n\r\n    export const register = (param: {\r\n        username: string;\r\n        password: string;\r\n        nickname: string;\r\n        email: string;\r\n        phoneNumber: string;\r\n    }) => new Request({\r\n        method: 'POST',\r\n        url: `${userHeader}/signUp`,\r\n        data: param\r\n    });\r\n\r\n    export const login = (param: {\r\n        username: string;\r\n        password: string;\r\n    }) => new Request({\r\n        method: 'POST',\r\n        url: `${userHeader}/signIn`,\r\n        data: param\r\n    });\r\n\r\n    export const search = (keyword: string) => new Request({\r\n        method: 'GET', url: `${userHeader}/search?keyword=${keyword}`\r\n    });\r\n\r\n    export const getMyInfo = () => new Request({\r\n        method: 'GET', url: `${userHeader}/current`\r\n    });\r\n\r\n    export const getInfoById = (id: string) => new Request({\r\n        method: 'GET', url: `${userHeader}/${id}`\r\n    });\r\n\r\n    export const update = (param: {\r\n        id: number,\r\n        nickname?: string,\r\n        signature?: string,\r\n        avatarUrl?: string,\r\n        privacyShow?: boolean\r\n    }) => new Request({\r\n        method: 'POST',\r\n        url: `${userHeader}/update`,\r\n        data: {\r\n            ...param,\r\n            privacyShow: param.privacyShow ? 1 : 0\r\n        }\r\n    });\r\n\r\n}\r\n\r\nexport namespace notice {\r\n    export const all = (id: string) => new Request({\r\n        method: \"GET\", url: `${noticeHeader}/${id}/all`\r\n    })\r\n\r\n    export const deleteNotice = (id: string) => new Request({\r\n        method: \"DELETE\", url: `${noticeHeader}/${id}/delete`\r\n    });\r\n\r\n    export const getById = (id: string) => new Request({\r\n        method: \"GET\", url: `${noticeHeader}/${id}/getNoticeById`\r\n    });\r\n\r\n    export const creat = (param: {\r\n        categoryId: number,\r\n        content: string,\r\n        creatorId: number,\r\n        title: string\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${noticeHeader}/create`,\r\n        data: param\r\n    });\r\n\r\n    export const update = (param: {\r\n        allNull: boolean,\r\n        content: string,\r\n        id: number,\r\n        title: string\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${noticeHeader}/update`,\r\n        data: param\r\n    });\r\n}\r\n\r\nexport namespace theme {\r\n    /*export const _ = (id: String) => new Request({\r\n            method: ,\r\n            url: `${themeHeader}/`,\r\n        })*/\r\n\r\n    export const all= (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/${id}/all`,\r\n    })\r\n\r\n    export const highQuality = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/${id}/highQuality`,\r\n    })\r\n\r\n    export const selectByTag = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/${id}/selectByTag`,\r\n    })\r\n\r\n    export const top = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/${id}/top`,\r\n    })\r\n\r\n    /*\r\n    *查看主题帖详情\r\n    */\r\n    export const viewDetails = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/${id}`,\r\n    })\r\n\r\n    export const deleteTheme = (id: string) => new Request({\r\n        method: \"DELETE\",\r\n        url: `${themeHeader}/${id}`,\r\n    })\r\n\r\n    export const cancelSetHighQuality = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/${id}/cancelSetHighQuality`,\r\n    })\r\n\r\n    export const cancelSetTop = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/${id}`,\r\n    })\r\n\r\n    export const setHighQuality = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/${id}/setHighQuality`,\r\n    })\r\n\r\n    export const setTop = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/${id}/setTop`,\r\n    })\r\n\r\n    export const create = (param: {\r\n        categoryId: number,\r\n        creatorId: number,\r\n        tags: {\r\n            id: number,\r\n            name: string,\r\n        }[],\r\n        title: string\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${themeHeader}/create`,\r\n        data: param\r\n    })\r\n\r\n    export const report = (param: {\r\n        reason: string,\r\n        reporterId: number,\r\n        themeId: number\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${themeHeader}/report`,\r\n        data: param\r\n    })\r\n\r\n    export const search = (keyword: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/search?keyword=${keyword}`,\r\n    })\r\n\r\n    export const tag = () => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/tag`,\r\n    })\r\n\r\n    export const addTag = (param: {\r\n        tagId: number,\r\n        themeId: number\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${themeHeader}/tag/add`,\r\n        data: param\r\n    })\r\n\r\n    export const removeTag = (param: {\r\n        tagId: number,\r\n        themeId: number\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${themeHeader}/tag/remove`,\r\n        data: param\r\n    })\r\n\r\n    export const top10ByReplyCount = () => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/top10/byThemeReplyCount`,\r\n    })\r\n\r\n    export const top10ByVisitsCount = () => new Request({\r\n        method: \"GET\",\r\n        url: `${themeHeader}/top10/byThemeVisitsCount`,\r\n    })\r\n\r\n    export const update = (param: {\r\n        id: number,\r\n        noTitle: boolean,\r\n        title: string\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${themeHeader}/`,\r\n        data: param\r\n    })\r\n}\r\n\r\nexport namespace history {\r\n    export const deleteHistory = (id: string) => new Request({\r\n        method: \"DELETE\",\r\n        url: `${historyHeader}/${id}/delete`,\r\n    })\r\n\r\n    export const getHistoryViewed = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${historyHeader}/${id}/getHistoryViewed`,\r\n    })\r\n\r\n    // export const _ = (param: {\r\n    //     ownerId: number,\r\n    //     viewedThemeId: number\r\n    // }) => new Request({\r\n    //     method: \"POST\",\r\n    //     url: `${historyHeader}/create`,\r\n    //     data: param\r\n    // })\r\n\r\n    export const myHistories= () => new Request({\r\n        method: \"GET\",\r\n        url: `${historyHeader}/myHistories`,\r\n    })\r\n}\r\n\r\nexport namespace favorite {\r\n    export const deleteFavorite = (id: string) => new Request({\r\n        method: \"DELETE\",\r\n        url: `${favoriteHeader}/${id}/delete`,\r\n    })\r\n\r\n    export const getAndUpdate = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${favoriteHeader}/${id}/getAndUpdate`,\r\n    })\r\n\r\n    export const create = (param: {\r\n        ownerId:number,\r\n        themeId:number\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${favoriteHeader}/create`,\r\n        data: param\r\n    })\r\n\r\n    export const myFavorite = () => new Request({\r\n        method: \"GET\",\r\n        url: `${favoriteHeader}/myFavorite`,\r\n    })\r\n\r\n}\r\n\r\nexport namespace post {\r\n    export const viewDetails = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${postHeader}/${id}`,\r\n    })\r\n\r\n    export const deletePost = (id: string) => new Request({\r\n        method: \"DELETE\",\r\n        url: `${postHeader}/${id}`,\r\n    })\r\n\r\n    export const like = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${postHeader}/like`,\r\n    })\r\n\r\n    export const unlike = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${postHeader}/unlike`,\r\n    })\r\n\r\n    export const create = (param: {\r\n        content: string,\r\n        creatorId: number,\r\n        number: number,\r\n        themeId: number\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${postHeader}/create`,\r\n        data: param\r\n    })\r\n\r\n    export const deleteReply = (id: string) => new Request({\r\n        method: \"DELETE\",\r\n        url: `${postHeader}/reply/${id}/delete`,\r\n    })\r\n\r\n    export const createReply = (param: {\r\n        content: string,\r\n        postReplyCreatorId: number,\r\n        targetPostId: number\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${postHeader}/reply/create`,\r\n        data: param\r\n    })\r\n\r\n    /*\r\n     * 获取指定主题帖下的所有帖子\r\n     */\r\n    export const getAllPostsUnderATheme= (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${postHeader}/theme`,\r\n    })\r\n\r\n    export const update = (param: {\r\n        content: string,\r\n        postId: number\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${postHeader}/`,\r\n        data: param\r\n    })\r\n}\r\n\r\nexport namespace inbox {\r\n    export const deleteInbox = (id: string) => new Request({\r\n        method: \"DELETE\",\r\n        url: `${inboxHeader}/${id}/delete`,\r\n    })\r\n\r\n    export const get = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${inboxHeader}/${id}/get`,\r\n    })\r\n\r\n    export const myInbox = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${inboxHeader}/${id}/myInbox`,\r\n    })\r\n\r\n    export const countAllUnchecked = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${inboxHeader}/${id}/myInbox/countAllUnchecked`,\r\n    })\r\n\r\n    export const myOutbox = (id: string) => new Request({\r\n        method: \"GET\",\r\n        url: `${inboxHeader}/${id}/myOutbox`,\r\n    })\r\n\r\n    export const create = (param: {\r\n        content: string,\r\n        recipientId: number,\r\n        senderId: number\r\n    }) => new Request({\r\n        method: \"POST\",\r\n        url: `${inboxHeader}/create`,\r\n        data: param\r\n    })\r\n}\r\n","import React, {FC, memo} from \"react\";\r\n\r\nconst Loading: FC = memo(() => (\r\n    <>Loading...</>\r\n))\r\n\r\nexport default Loading;\r\n","import React, {FC, HTMLProps, memo} from \"react\";\r\n\r\nimport '../styles/components/SignCard.scss';\r\nimport logo from '../images/favicon.svg';\r\n\r\ninterface IProps {\r\n    title: string;\r\n    children: JSX.Element | JSX.Element[];\r\n    favicon: boolean;\r\n};\r\n\r\nconst SignCard: FC<IProps & HTMLProps<any>> = memo(({\r\n    title, children, favicon, className\r\n}) => {\r\n    return (\r\n        <div id=\"comp-sign-card\" className={className}><div className='bg-frame-container'>\r\n            {favicon && <img src={logo} alt='いいね！' className='card-favicon'/>}\r\n            <div className='card-title'>{title}</div>\r\n            <div>{children}</div>\r\n        </div></div>\r\n    )\r\n});\r\n\r\nexport default SignCard;\r\n","import React, {FC, memo} from 'react';\r\nimport {LoginProps} from \"../../containers/views/Login\";\r\nimport '../../styles/components/views/Login.scss';\r\n\r\nimport {Button, Form, Input, message} from 'antd';\r\nimport {HomeOutlined, LoginOutlined, LoadingOutlined} from '@ant-design/icons';\r\nimport {useHistory} from 'react-router-dom';\r\nimport SignCard from \"../SignCard\";\r\n\r\nimport shiroha from '../../images/bg-shiroha.png';\r\nimport * as url from '../../configs/url';\r\n\r\nconst styles = {\r\n    input: {width: '360px'} as any,\r\n    bg: {backgroundImage: `url(${shiroha})`} as any,\r\n}\r\n\r\nconst Login: FC<LoginProps> = memo(({handleLogin, loggedIn, isLoading}) => {\r\n\r\n    let history = useHistory();\r\n    let [form] = Form.useForm();\r\n\r\n    const backToHome = () => {\r\n        history.push('/');\r\n    };\r\n\r\n    const forgetPwd = () => {\r\n        message.info('功能开发中，请联系管理员来更改密码');\r\n    };\r\n\r\n    const navToReg = () => {\r\n        history.push(url.register);\r\n    };\r\n\r\n    const tryLogin = (values: any) => {\r\n        const {username, password} = values;\r\n        handleLogin(username, password);\r\n    }\r\n\r\n    // TODO: 可能需要从 viewStore 里取出刚注册的信息\r\n    return (\r\n        <div id=\"view-login\" className='bg-frame'>\r\n            <div className='bg-shiroha' style={styles.bg} />\r\n            <SignCard title={'登录'} favicon={true}>\r\n                {!isLoading && loggedIn ? (<div className='logged-in-fallback'>\r\n                    <div className='text-field'>\r\n                        似乎您已经登陆成功了…… 要回到主页吗\r\n                    </div>\r\n                    <Button type=\"primary\" shape=\"round\" icon={<HomeOutlined />}\r\n                            size='large' onClick={backToHome} className='back'>\r\n                        回到主页\r\n                    </Button>\r\n                </div>) : (<>\r\n                    <Form form={form} className='login-form' onFinish={tryLogin} size='large'>\r\n                        <Form.Item name='username' style={styles.input} required>\r\n                            <Input placeholder='用户名'/>\r\n                        </Form.Item>\r\n                        <Form.Item name='password' style={styles.input} required>\r\n                            <Input.Password placeholder='密码' />\r\n                        </Form.Item>\r\n                        <Form.Item className='bottom-buttons'>\r\n                            <Button type=\"text\" shape=\"round\" onClick={navToReg}>\r\n                                注册新用户\r\n                            </Button>\r\n                            <Button type=\"primary\" shape=\"round\"  className='main'\r\n                                    icon={!isLoading ? <LoginOutlined /> : <LoadingOutlined />}\r\n                                    size='large' htmlType='submit'>\r\n                                登录\r\n                            </Button>\r\n                            <Button type=\"text\" shape=\"round\" onClick={forgetPwd}>\r\n                                忘记密码？\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </>)}\r\n            </SignCard>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Login;\r\n","import {connect} from \"react-redux\";\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport {StoreState} from \"../../redux/reducers\";\r\nimport Login from \"../../components/views/Login\";\r\n\r\nimport * as $actions from '../../redux/actions/async';\r\n\r\nconst mapStateToProps = ({\r\n    user: {token, isLoading},\r\n}: StoreState) => ({\r\n    loggedIn: !!token, isLoading,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\r\n    handleLogin: $actions.loginStart,\r\n}, dispatch);\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport type LoginProps = StateProps & DispatchProps;\r\nexport default connect<StateProps, DispatchProps, {}, StoreState>(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, {ChangeEvent, FC, memo, useState} from 'react';\r\nimport {RegisterProps} from \"../../containers/views/Register\";\r\nimport '../../styles/components/views/Register.scss';\r\n\r\nimport {useHistory} from \"react-router\";\r\nimport {Form, Input, Button, Progress, message} from 'antd';\r\nimport {\r\n    LeftOutlined, RightOutlined,\r\n    CheckOutlined, LoadingOutlined,\r\n} from '@ant-design/icons';\r\n\r\nimport BgImg from \"../BgImg\";\r\n\r\nimport atri from '../../images/bg-atri.png';\r\nimport * as url from '../../configs/url';\r\nimport SignCard from \"../SignCard\";\r\nimport {checkPassWord} from \"../../utils/tools\";\r\nimport {pwdMinLength} from \"../../configs/consts\";\r\nimport {RegisterForm} from \"../../configs/types\";\r\n\r\nconst regSteps: number = 3;\r\n\r\nconst NowForm: FC<{step: number, alia?: string}> = memo(({step, alia}) => {\r\n\r\n    const [strength, setStrength] = useState(0);\r\n    const text = ['', '弱', '较弱', '中等', '较强', '强'];\r\n    const color = ['', 'red', 'orange', '', '', '#73CF46'];\r\n\r\n    const testPwd = (e: ChangeEvent<HTMLInputElement>) => {\r\n        const value = e.target.value;\r\n        const res = checkPassWord(value);\r\n        setStrength(res < 0 ? 0 : res);\r\n    }\r\n\r\n    if (step <= 0) return <>\r\n        <Form.Item name='username' className='input-item'\r\n                   rules={[{required: true, message: '用户名不能为空'},\r\n                       {pattern: /^[a-z0-9A-Z_]+$/, message: '用户名仅可包含字母、数字以及下划线'},\r\n                       {pattern: /^[a-zA-Z].*$/, message: '用户名的第一个字符必须是字母'}]}>\r\n            <Input placeholder='用户名' />\r\n        </Form.Item>\r\n        <Form.Item name='password' className='input-item'\r\n                   rules={[{required: true, message: '新密码不能为空'},\r\n                       {type: 'string', min: pwdMinLength, message: `密码长度不能小于 ${pwdMinLength} 位`}]}>\r\n            <Input.Password placeholder='新密码' onChange={testPwd}/>\r\n        </Form.Item>\r\n        <Form.Item name='passwordConfirm' className='input-item'\r\n                   rules={[{required: true, message: '请确认您的密码'},\r\n                       ({ getFieldValue }) => ({\r\n                           validator(rule, value) {\r\n                               if (!value || getFieldValue('password') === value) {\r\n                                   return Promise.resolve();\r\n                               } else return Promise.reject('两次输入的密码不匹配，请重试！');\r\n                           },\r\n                       }),]}>\r\n            <Input.Password placeholder='确认密码' />\r\n        </Form.Item>\r\n        <Form.Item><div className='pwd-strength'>\r\n            <div className='label'>密码强度：</div>\r\n            <Progress type='line' steps={5} percent={strength * 20} className='progress'\r\n                      strokeWidth={14}\r\n                      format={(percent) => {\r\n                          const v = (percent ?? 0) / 20;\r\n                          return <div style={{color:'black'}}> {text[Math.ceil(v)]}</div>;\r\n                      }} strokeColor={color[strength]} size={'small'}/></div>\r\n        </Form.Item>\r\n    </>;\r\n    else if (step === 1) return <>\r\n        <Form.Item name='phone' className='input-item'\r\n                   rules={[{required: true, message: '电话号码不能为空！'}]}>\r\n            <Input placeholder='移动电话号码' />\r\n        </Form.Item>\r\n        <Form.Item name='email' className='input-item'\r\n                   rules={[{type: 'email', message: '请输入合法的电子邮件地址！'},\r\n                       {required: true, message: '电子邮件地址不能为空！'}]}>\r\n            <Input placeholder='电子邮箱地址' />\r\n        </Form.Item>\r\n    </>;\r\n    else return <div className='success-form'>\r\n        <CheckOutlined className='success-icon'/>\r\n        <div className='success-title'>\r\n            注册成功\r\n        </div>\r\n        <div className='success-content'>\r\n            {alia}，欢迎您的加入！\r\n        </div>\r\n    </div>;\r\n})\r\n\r\nconst Register: FC<RegisterProps> = memo(({\r\n    tryRegister, waiting,\r\n}) => {\r\n    const [form] = Form.useForm();\r\n    const [step, setStep] = useState(0);\r\n    const history = useHistory();\r\n\r\n    const guides = ['首先，请设置您的账户的基本信息~', '现在，再添加一些联系方式~', ''];\r\n    const isLastStep = () => step + 1 === regSteps;\r\n\r\n    const stepForward = () => {\r\n        if (step <= 0) history.push(url.login);\r\n        else setStep(step - 1);\r\n    }\r\n\r\n    const stepNext = (values: {}) => {\r\n        if (isLastStep()) history.push(url.login);\r\n        else switch (step) {\r\n            case regSteps - 2:\r\n                const data = {\r\n                    username: form.getFieldValue('username'),\r\n                    password: form.getFieldValue('password'),\r\n                    phoneNumber: form.getFieldValue('phone'),\r\n                    email: form.getFieldValue('email'),\r\n                    nickname: form.getFieldValue('username'), // TODO: 注册什么时候需要 nickname 的？\r\n                };\r\n                handleSubmit(data);\r\n                break;\r\n            default: setStep(step + 1);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (values: RegisterForm) => {\r\n        console.log('本次的注册信息', values);\r\n        tryRegister(values, () => setStep(step + 1));\r\n    }\r\n\r\n    return (\r\n        <div id='view-register' className='bg-frame'>\r\n          <BgImg src={atri} />\r\n          <SignCard title='注册' favicon={false}>\r\n            <div className='guide'>\r\n              {guides[step]}\r\n            </div>\r\n            <div className='form'>\r\n              <Form form={form} size='large' onFinish={stepNext}\r\n                    onFinishFailed={() => message.warn('请检查表单内容合法性！')}>\r\n                <NowForm step={step} alia={form.getFieldValue('username')}/>\r\n              </Form>\r\n            </div>\r\n            <div className='navigator'>\r\n              <Button title={''} type='text' shape=\"round\" size='large'\r\n                      disabled={isLastStep()}\r\n                      onClick={stepForward} className='nav-button'>\r\n                <LeftOutlined />{!step ? `返回登陆` : `上一步`}\r\n              </Button>\r\n              <div className='now-step'>\r\n                {`第 ${step + 1} 步，共 ${regSteps} 步`}\r\n              </div>\r\n              <Button title={''} type='text' shape=\"round\" size='large'\r\n                      onClick={() => form.submit()} className='nav-button'>\r\n                {isLastStep() ? '现在登陆' : '下一步'}\r\n                {waiting ? <LoadingOutlined /> : <RightOutlined />}\r\n              </Button>\r\n            </div>\r\n          </SignCard>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Register;\r\n","import {connect} from \"react-redux\";\r\nimport {bindActionCreators, Dispatch} from 'redux';\r\nimport {StoreState} from \"../../redux/reducers\";\r\nimport * as $actions from '../../redux/actions/async';\r\nimport * as actions from '../../redux/actions/';\r\n\r\nimport Register from \"../../components/views/Register\";\r\n\r\nconst mapStateToProps = ({\r\n    component: {inProcess}\r\n}: StoreState) => ({\r\n    waiting: inProcess,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\r\n    tryRegister: $actions.registerStart,\r\n}, dispatch);\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport type RegisterProps = StateProps & DispatchProps;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, {FC, memo, useState} from \"react\";\r\n\r\nimport {Button, Row, Col} from 'antd';\r\nimport * as xhr from \"../utils/xhr\";\r\n\r\nimport {TestAppProps} from \"./container\";\r\nimport './style/index.scss';\r\nimport {MockServer} from \"../configs/consts\";\r\n\r\nconst TestApp: FC<TestAppProps> = memo(({fetchInfo, loggedIn, token, userInfo, setToken}) => {\r\n\r\n    const [data, setData] = useState({});\r\n\r\n    const send = () => {\r\n        xhr.$testGetMethod().then(res => setData(res)).catch(e => console.log(e));\r\n    }\r\n\r\n    const newToken = () => {\r\n        const token = Math.random() * 1000000000;\r\n        setToken(token.toString(16));\r\n    }\r\n\r\n    return (\r\n        <div id=\"test-app\" className=\"test-app-root\">\r\n            <Row>\r\n                <Col span={8} className=\"xhr-test\">\r\n                    <div className=\"text-field\">\r\n                        {JSON.stringify(data)}\r\n                    </div>\r\n                    <Button title=\"Send a Request\" onClick={send} type={\"primary\"}>\r\n                        {`${MockServer}/test/testGetMethod`}\r\n                    </Button>\r\n                </Col>\r\n                <Col span={8} className=\"saga-test\">\r\n                    <div className=\"text-field\">\r\n                        {JSON.stringify(userInfo)} <br/>\r\n                        loggedIn: {loggedIn ? \"true\" : \"false\"} <br/>\r\n                        token: {token}\r\n                    </div>\r\n                    <Button title=\"Fetch My Info\" onClick={() => fetchInfo('./testApp')}>\r\n                        I'm YJSNPI !!\r\n                    </Button>\r\n                </Col>\r\n                <Col span={8} className=\"token-test\">\r\n                    <div className=\"text-field\">\r\n                        Check console and make sure store.subscribe is working. <br />\r\n                        Maybe you should add a console.log first.\r\n                    </div>\r\n                    <Button title=\"Random a new token\" onClick={newToken}>\r\n                        Try a new login\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default TestApp;\r\n","import * as api from '../configs/api';\r\n\r\nexport function $fetchMyInfo() {\r\n    return api.test.fetchMyInfo().exec();\r\n}\r\n\r\nexport function $testGetMethod() {\r\n    return api.test.testGetMethod().exec();\r\n}\r\n\r\nexport function $login(param: {\r\n    username: string;\r\n    password: string;\r\n}) {\r\n    return api.user.login(param).exec();\r\n}\r\n","import {connect} from \"react-redux\";\r\n\r\nimport TestApp from \"../index\";\r\nimport {StoreState} from \"../../redux/reducers\";\r\nimport {Dispatch, bindActionCreators} from \"redux\";\r\nimport * as $actions from \"../../redux/actions/async\";\r\nimport * as actions from '../../redux/actions';\r\n\r\n\r\nconst mapStateToProps = ({user: {token, isLoading, info}}: StoreState) => ({\r\n    loggedIn: !!token,\r\n    token, isLoading,\r\n    userInfo: info,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\r\n    fetchInfo: $actions.fetchMyInfoStart,\r\n    setToken: actions.login,\r\n}, dispatch);\r\n\r\ntype StateProps = ReturnType<typeof mapStateToProps>;\r\ntype DispatchProps = ReturnType<typeof mapDispatchToProps>;\r\n\r\nexport type TestAppProps = StateProps & DispatchProps;\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TestApp);\r\n","import React, {FC, lazy, memo, useEffect} from 'react';\r\nimport {Redirect, Route, RouteComponentProps, Switch, withRouter} from \"react-router\";\r\nimport {Suspense} from 'react';\r\n\r\nimport PageFrame from \"../containers/PageFrame\";\r\nimport Loading from \"../components/Loading\";\r\n\r\nimport * as url from '../configs/url';\r\n\r\nimport Login from \"../containers/views/Login\";\r\nimport Register from \"../containers/views/Register\";\r\nimport TestApp from \"../test/container\";\r\n\r\nconst Homepage = lazy(() => import(\"../containers/pages/homepage\"));\r\nconst User = lazy(() => import(\"../containers/pages/user\"));\r\nconst PostPage = lazy(() => import(\"../containers/pages/PostPage\"));\r\nconst CategoryPage = lazy(() => import(\"../containers/pages/CategoryPage\"));\r\n\r\n\r\nconst Index: FC = memo(() => {\r\n\r\n    useEffect(() => window.scrollTo(0, 0));\r\n\r\n    const routerRender = (Component: JSX.Element) => (props: RouteComponentProps) => (\r\n        <PageFrame {...props}>\r\n            <Suspense fallback={<Loading />}>\r\n                {Component}\r\n            </Suspense>\r\n        </PageFrame>\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Switch>\r\n          <Route path={url.login} exact component={Login} />\r\n          <Route path={url.register} exact component={Register} />\r\n          <Route path={url.root} exact render={routerRender(<Homepage />)} />\r\n          <Route path={url.user} exact render={routerRender(<User />)} />\r\n          <Route path={url.me} exact render={routerRender(<User />)} />\r\n          <Route path=\"/PostPage\" exact render={routerRender(<PostPage />)} />\r\n          <Route path={url.category} exact render={routerRender(<CategoryPage />)} />\r\n          <Route path=\"/testApp\" exact component={TestApp} />\r\n          <Redirect to={url.$404}/>\r\n        </Switch>\r\n      </>\r\n    );\r\n})\r\n\r\nexport default withRouter(Index);\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest, select} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as actions from '../../redux/actions';\r\nimport * as url from '../../configs/url';\r\n\r\nimport {$history} from \"../../App\";\r\nimport {notification} from \"antd\";\r\nimport {stringConvert} from \"../../utils/DateTimes\";\r\nimport {cateToCate, userToUser} from \"../../utils/tools\";\r\nimport {message} from 'antd';\r\n\r\nfunction* worker(action: $actions.FetchMyInfoStart) {\r\n    try {\r\n        yield put(actions.toggleUserLoading(true));\r\n        const res = yield api.user.getMyInfo().exec();\r\n        if (res.data.code == -1) {\r\n            message.warn('身份认证已经过期，请重新登录！');\r\n            yield put(actions.logout());\r\n            yield $history.push(url.login);\r\n        } else {\r\n            const res2 = yield api.category.getManage().exec();\r\n            const body = res.data.data;\r\n            const body2 = res2.data.data;\r\n            const act = actions.myInfoFetched(userToUser(body));\r\n            const res3 = yield api.inbox.countAllUnchecked(body.id).exec();\r\n            const arr = body2.map((obj: any) => cateToCate(obj));\r\n            const act2 = actions.manageCategoriesFetched(arr);\r\n            yield put(act);\r\n            yield put(act2);\r\n            yield (!!action.isFirstTime || !!action.title) &&\r\n            notification.success({\r\n                message: action.title ?? '登陆成功',\r\n                description: `${body.username}，欢迎回来！`,\r\n            });\r\n            yield put(actions.inboxCountFetched(res3.data.data));\r\n            yield put(actions.userInfoFetched(body.id, userToUser(body)));\r\n            yield !!action.redirect && $history.push(action.redirect);\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n    } finally {\r\n        yield put(actions.toggleUserLoading(false));\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.FETCH_MY_INFO_START, worker);\r\n};\r\n\r\nexport default watcher;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest, select} from 'redux-saga/effects';\r\nimport * as xhr from '../../utils/xhr';\r\nimport * as actions from '../../redux/actions';\r\nimport * as url from '../../configs/url';\r\n\r\nimport {message, notification} from 'antd';\r\n\r\nfunction* worker(action: $actions.LoginStart) {\r\n    try {\r\n        const {username, password} = action;\r\n        const res = yield xhr.$login({username, password});\r\n        const body = res.data;\r\n        if (body.code === 1) {\r\n            yield put(actions.login(body.data));\r\n            yield put($actions.fetchMyInfoStart(url.root, true));\r\n        } else {\r\n            yield message.error(`[code=${body.code}] ${body.msg}`);\r\n        }\r\n    } catch (err) {\r\n        console.log(err);\r\n        message.error(err.toString())\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.LOGIN_START, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest, delay} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as actions from '../../redux/actions';\r\nimport {message} from 'antd';\r\n\r\nfunction* worker(action: $actions.RegisterStart) {\r\n    try {\r\n        yield put(actions.processStarted());\r\n        const callback = action.cb ?? (() => {});\r\n        const res = yield api.user.register(action.form).exec();\r\n        console.log(res);\r\n        const body = res.data;\r\n        if (body.code === 0 || body.code === 1) {\r\n            const {username, password} = action.form;\r\n            yield put(actions.registerFormFilled({username, password}));\r\n            yield callback();\r\n        } else message.warn(body.msg);\r\n\r\n    } catch (e) {\r\n        message.error(e.toString());\r\n    } finally {\r\n        yield put(actions.processHandled());\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.REGISTER_START, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest, select} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as url from '../../configs/url';\r\nimport * as actions from '../../redux/actions';\r\n\r\nimport {message} from 'antd';\r\nimport {$history} from \"../../App\";\r\n\r\nfunction* worker(action: $actions.UpdateUserInfoStart) {\r\n    const cb = action.cb ?? (() => {});\r\n    try {\r\n        yield put(actions.processStarted());\r\n        const res = yield api.user.update(action.data).exec();\r\n        if (res.data.code < 0) {\r\n            yield message.warn(res.data.msg);\r\n        } else {\r\n            yield message.success('操作已成功！');\r\n            yield put($actions.fetchMyInfoStart());\r\n        }\r\n    } catch (e) {\r\n        message.error(e.toString());\r\n    } finally {\r\n        yield put(actions.processHandled());\r\n        yield cb();\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.UPDATE_USER_INFO_START, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest, select} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as actions from '../../redux/actions';\r\nimport * as url from '../../configs/url';\r\n\r\nimport {$history} from \"../../App\";\r\nimport {notification} from \"antd\";\r\nimport {message} from 'antd';\r\n\r\nfunction* worker(action: $actions.FetchMyInboxStart) {\r\n    try {\r\n        yield put(actions.processStarted());\r\n        const res = yield api.inbox.myInbox(action.uid.toString()).exec();\r\n        console.log(res);\r\n        if (res.data.code >= 0) {\r\n            yield put(actions.myInboxFetched(res.data.data));\r\n            for (const ii of res.data.data) {\r\n                yield ii?.senderId && put($actions.fetchUserInfoStart(ii.senderId));\r\n            }\r\n        } else {\r\n            yield message.warn(res.msg);\r\n        }\r\n    } catch (e) {\r\n        yield message.error(e.toString());\r\n    } finally {\r\n        yield put(actions.processHandled());\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.FETCH_MY_INBOX_START, worker)\r\n}\r\n\r\nexport default watcher;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest, select} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as actions from '../../redux/actions';\r\n\r\nimport {message} from 'antd';\r\n\r\nfunction* worker() {\r\n    try {\r\n        yield put(actions.processStarted());\r\n        const res = yield api.favorite.myFavorite().exec();\r\n        if (res.data.code < 0) {\r\n            yield message.warn(res.data.msg);\r\n        } else {\r\n            yield put(actions.myFavoriteFetched(res.data.data));\r\n        }\r\n    } catch (e) {\r\n        yield message.error(e.toString());\r\n    } finally {\r\n        yield put(actions.processHandled());\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.FETCH_MY_FAVORITE_START, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest, select} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as actions from '../../redux/actions';\r\n\r\nimport {message} from 'antd';\r\n\r\nfunction* worker(action: $actions.DeleteFavoriteStart) {\r\n    try {\r\n        yield put(actions.processStarted());\r\n        const res = yield api.favorite.deleteFavorite(action.fid.toString()).exec();\r\n        if (res.data.code < 0) {\r\n            yield message.warn(res.data.msg);\r\n        } else {\r\n            yield message.success('删除成功！');\r\n            yield put($actions.fetchMyFavoriteStart());     // TODO: 强制刷新？\r\n        }\r\n    } catch (e) {\r\n        yield message.error(e.toString());\r\n    } finally {\r\n        yield put(actions.processHandled());\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.DELETE_FAVORITE_START, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import FetchMyInfo from './FetchMyInfo';\r\nimport LoginStart from './LoginStart';\r\nimport RegisterStart from './RegisterStart';\r\nimport UpdateUserInfoStart from './UpdateUserInfoStart';\r\nimport FetchMyInbox from './FetchMyInbox';\r\nimport FetchMyFavorite from './FetchMyFavorite';\r\nimport DeleteFavorite from './DeleteFavorite';\r\n\r\nconst UserSagas = [\r\n    FetchMyInfo,\r\n    LoginStart,\r\n    RegisterStart,\r\n    UpdateUserInfoStart,\r\n    FetchMyInbox,\r\n    FetchMyFavorite,\r\n    DeleteFavorite,\r\n]\r\n\r\nexport default UserSagas;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest, delay} from 'redux-saga/effects';\r\nimport * as actions from '../../redux/actions';\r\n\r\nfunction* worker(action: $actions.WaitProcess) {\r\n    yield put(actions.processStarted());\r\n    const func = action.handler ?? (() => {});\r\n    // TODO: 怎么使用 Window.setTimeout 实现？\r\n    // setTimeout(func, action.time);\r\n    yield delay(action.time);\r\n    yield func();\r\n    yield put(actions.processHandled());\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.WAIT_PROCESS, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest, select} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as url from '../../configs/url';\r\nimport * as actions from '../../redux/actions';\r\n\r\nimport {message} from 'antd';\r\nimport {userToUser} from \"../../utils/tools\";\r\nimport {$history} from \"../../App\";\r\n\r\nfunction* worker(action: $actions.FetchUserInfoStart) {\r\n    try {\r\n        yield put(actions.processStarted());\r\n        const res = yield api.user.getInfoById(action.uid.toString()).exec();\r\n        const res1 = yield api.category.getManage(action.uid.toString()).exec();\r\n        const body = res.data;\r\n        const cnt = (res1.data.data ?? []).length;\r\n        console.log(body)\r\n        if (body.code >= 0) {\r\n            const data = yield userToUser(body.data);\r\n            console.log(data);\r\n            yield put(actions.userInfoFetched(action.uid, {...data, manageCateId: cnt}));\r\n        } else {\r\n            yield message.warn(body.msg);\r\n            $history.push(url.$404);\r\n        }\r\n    } catch (e) {\r\n        yield message.error(e.toString());\r\n        $history.push(url.$404);\r\n    } finally {\r\n        yield put(actions.processHandled());\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.FETCH_USER_INFO_START, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import WaitProcess from './WaitProcess';\r\nimport FetchUserInfoStart from './FetchUserInfoStart';\r\n\r\nconst ComponentSagas = [\r\n    WaitProcess,\r\n    FetchUserInfoStart,\r\n]\r\n\r\nexport default ComponentSagas;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport * as actions from '../../redux/actions/';\r\nimport {put, takeLatest} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as url from '../../configs/url';\r\n\r\nimport {message} from 'antd';\r\nimport {themeToTheme} from \"../../utils/tools\";\r\nimport {$history} from \"../../App\";\r\n\r\nfunction* worker() {\r\n    try {\r\n        yield put($actions.fetchCategoriesStart());\r\n        const res_new = yield api.theme.top10ByVisitsCount().exec();\r\n        const res_rep = yield api.theme.top10ByReplyCount().exec();\r\n        if (res_new.data.code < 0 || res_rep.data.code < 0) {\r\n            message.warn(res_new.data.msg);\r\n            message.warn(res_rep.data.msg);\r\n        } else {\r\n            let $new = [], $rep = [];\r\n            for (const ii of res_new.data.data) {\r\n                $new.push(themeToTheme(ii));\r\n                yield put($actions.fetchUserInfoStart(ii.creatorId));\r\n            }\r\n            for (const ii of res_rep.data.data) {\r\n                $rep.push(themeToTheme(ii));\r\n                yield put($actions.fetchUserInfoStart(ii.creatorId));\r\n            }\r\n        }\r\n    } catch (e) {\r\n        yield message.error(e.toString());\r\n        $history.push(url.$404);\r\n    } finally {\r\n        yield put(actions.homepageIsLoaded(true));\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.FETCH_HOME_PAGE_START, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest, select} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as url from '../../configs/url';\r\nimport * as actions from '../../redux/actions';\r\n\r\nimport {message} from 'antd';\r\nimport {cateToCate, userToUser} from \"../../utils/tools\";\r\nimport {$history} from \"../../App\";\r\n\r\nfunction* worker() {\r\n    try {\r\n        const res = yield api.category.getAll().exec();\r\n        if (res.data.code < 0) {\r\n            yield message.warn(res.data.msg);\r\n        } else {\r\n            const data = res.data.data;\r\n            let arr = [];\r\n            for (const ii of data) arr.push(cateToCate(ii));\r\n            yield put(actions.categoriesFetched(arr));\r\n        }\r\n    } catch (e) {\r\n        yield message.error(e.toString());\r\n        $history.push(url.$404);\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.FETCH_CATEGORIES_START, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as url from '../../configs/url';\r\n\r\nimport {message} from 'antd';\r\nimport {themeToTheme} from \"../../utils/tools\";\r\nimport {$history} from \"../../App\";\r\n\r\nfunction* worker(action: $actions.FetchAllThemesStart) {\r\n    try {\r\n        const res = yield api.theme.all(action.cid.toString()).exec();\r\n        if (res.data.code < 0) {\r\n            yield message.warn(res.data.msg);\r\n        } else {\r\n            const data = res.data.data;\r\n            let arr = [];\r\n            for (const ii of data) arr.push(themeToTheme(ii));\r\n            // TODO: put some action\r\n        }\r\n    } catch (e) {\r\n        yield message.error(e.toString());\r\n        $history.push(url.$404);\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.FETCH_ALL_THEMES_START, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import * as $actions from '../../redux/actions/async';\r\nimport {put, takeLatest} from 'redux-saga/effects';\r\nimport * as api from '../../configs/api';\r\nimport * as url from '../../configs/url';\r\nimport * as actions from '../../redux/actions';\r\n\r\nimport {message} from 'antd';\r\nimport {cateToCate, noticeToAnnouncement, themeToTheme, uniqueArray} from \"../../utils/tools\";\r\nimport {$history} from \"../../App\";\r\nimport {Announcement, Theme} from \"../../configs/types\";\r\n\r\nfunction processTheme(body: any, action: any[]): Theme[] {\r\n    let arr = [];\r\n    for (const ii of body.data) {\r\n        arr.push(themeToTheme(ii));\r\n        action.push($actions.fetchUserInfoStart(ii.creatorId));\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction processAnnounce(body: any, action: any[]): Announcement[] {\r\n    let arr = [];\r\n    for (const ii of body.data) {\r\n        arr.push(noticeToAnnouncement(ii));\r\n        action.push($actions.fetchUserInfoStart(ii.creatorId));\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction* worker(action: $actions.FetchCategoryDetail) {\r\n    try {\r\n        const $id = action.cateId.toString();\r\n        let res = [], fail = 0;\r\n        res[0] = yield api.theme.all($id).exec();\r\n        res[1] = yield api.category.getInfoById($id).exec();\r\n        res[2] = yield api.theme.top($id).exec();\r\n        res[3] = yield api.theme.highQuality($id).exec();\r\n        res[4] = yield api.notice.all($id).exec();\r\n        res[5] = yield api.theme.tag().exec();\r\n        for (const ii of res) if (ii.data.code < 0) {\r\n            message.warn(ii.data.msg);\r\n            ++ fail;\r\n        }\r\n        if (!fail) {\r\n            let $action: any[] = [];\r\n            const all = processTheme(res[0].data, $action);\r\n            const info = cateToCate(res[1].data.data);\r\n            const pin = processTheme(res[2].data, $action);\r\n            const highQuality = processTheme(res[3].data, $action);\r\n            const announce = processAnnounce(res[4].data, $action);\r\n            const tags = res[5].data.data;\r\n            const hash = uniqueArray($action);\r\n            console.log($action, hash, res);\r\n            for (const ii of hash) yield put(ii);\r\n            yield put(actions.categoryDetailsFetched(info, highQuality, pin, all, announce, tags));\r\n        }\r\n    } catch (e) {\r\n        yield message.error(e.toString());\r\n        $history.push(url.$404);\r\n    }\r\n}\r\n\r\nfunction* watcher() {\r\n    yield takeLatest($actions.FETCH_CATEGORY_DETAIL, worker);\r\n}\r\n\r\nexport default watcher;\r\n","import FetchHomePage from './FetchHomePage';\r\nimport FetchCategories from './FetchCategories';\r\nimport FetchAllThemes from './FetchAllThemes';\r\nimport FetchCategoryDetail from './FetchCategoryDetail';\r\n\r\nconst PageSagas = [\r\n    FetchHomePage,\r\n    FetchCategories,\r\n    FetchCategoryDetail,\r\n    FetchAllThemes,\r\n];\r\n\r\nexport default PageSagas;\r\n","import {all, call} from 'redux-saga/effects';\r\n\r\nimport UserSagas from \"./user\";\r\nimport ComponentSagas from \"./components\";\r\nimport PageSagas from \"./pages\";\r\n\r\nconst importSagas = [\r\n    ...UserSagas,\r\n    ...ComponentSagas,\r\n    ...PageSagas,\r\n];\r\n\r\nexport default function* Sagas() {\r\n    yield all(importSagas.map(saga => call(saga)));\r\n};\r\n","import {storage, tokenExpireTime} from \"../configs/consts\";\r\n\r\n/**\r\n *\r\n * @param key\r\n * @deprecated\r\n */\r\nexport const getItem = (key: string) => {\r\n    return sessionStorage.hasOwnProperty(key) ? sessionStorage.getItem(key) :\r\n        localStorage.hasOwnProperty(key) ? localStorage.getItem(key) : '';\r\n}\r\n\r\nexport const setToken = (token: string, temp = false) => {\r\n    const useStorage = temp ? sessionStorage : localStorage;\r\n    useStorage.setItem(storage.token, token);\r\n    useStorage.setItem(storage.tokenSetTime, Date.now().toString());\r\n}\r\n\r\nconst hasToken = (s: Storage): boolean => {\r\n    const {token, tokenSetTime} = storage;\r\n    if (s.hasOwnProperty(token) && s.hasOwnProperty(tokenSetTime)) {\r\n        const timestamp = parseInt(s.getItem(tokenSetTime) ?? '0');\r\n        const now = Date.now();\r\n        return (now - timestamp <= tokenExpireTime)\r\n    } else return false;\r\n}\r\n\r\nexport const getToken = (): string | null => {\r\n    if (hasToken(sessionStorage)) return sessionStorage.getItem(storage.token);\r\n    else return hasToken(localStorage) ? localStorage.getItem(storage.token) : null;\r\n}\r\n\r\nexport const removeToken = () => {\r\n    sessionStorage.removeItem(storage.token);\r\n    localStorage.removeItem(storage.token);\r\n}\r\n","import * as actions from '../actions';\r\nimport {User, Notification, Category, Mail, Favorite} from \"../../configs/types\";\r\nimport {getToken, setToken, removeToken} from \"../../utils/useStorage\";\r\n\r\ntype Action =\r\n    | actions.Login\r\n    | actions.Logout\r\n    | actions.MyInfoFetched\r\n    | actions.ToggleUserLoading\r\n    | actions.InboxCountFetched\r\n    | actions.MyFavoriteFetched\r\n    | actions.MyInboxFetched\r\n    | actions.MyMessageFetched\r\n\r\nexport interface UserStore {\r\n    token: string;\r\n    info: User;\r\n    isLoading: boolean;\r\n    inbox: number;\r\n    sysMsg: Notification[];\r\n    success: boolean;\r\n    manageCate: Category[];\r\n    mails: Mail[];\r\n    favorites: Favorite[],\r\n}\r\n\r\nconst existingToken = getToken() ?? '';\r\n\r\nexport const userInit: UserStore = {\r\n    token: existingToken,\r\n    info: {} as User,\r\n    isLoading: false,\r\n    sysMsg: [],\r\n    success: false,\r\n    manageCate: [],\r\n    inbox: 0,\r\n    mails: [],\r\n    favorites: [],\r\n};\r\n\r\nexport function userReducer(state = userInit, action: Action): UserStore {\r\n    switch (action.type) {\r\n        case actions.LOGIN:\r\n            const {token} = action;\r\n            setToken(token);\r\n            return {...state, token};\r\n        case actions.LOGOUT:\r\n            removeToken();\r\n            return {...userInit, token: ''};\r\n        case actions.MY_INFO_FETCHED:\r\n            const info = action.data;\r\n            return {...state, info};\r\n        case actions.TOGGLE_USER_LOADING:\r\n            const isLoading = action.on;\r\n            return {...state, isLoading};\r\n        case actions.INBOX_COUNT_FETCHED:\r\n            return {...state, inbox: action.count};\r\n        case actions.MY_INBOX_FETCHED:\r\n            return {...state, mails: action.data};\r\n        case actions.MY_FAVORITE_FETCHED:\r\n            return {...state, favorites: action.data};\r\n        case actions.MY_MESSAGE_FETCHED:\r\n            return {...state, sysMsg: action.msg};\r\n    }\r\n    return state;\r\n}\r\n","import * as actions from '../actions';\r\nimport {Announcement, Category, Theme} from \"../../configs/types\";\r\nimport {defaultFavicon} from \"../../configs/consts\";\r\n\r\ntype Action =\r\n    | actions.RecommendFetched\r\n    | actions.HomePageFetched\r\n    | actions.CategoriesFetched\r\n    | actions.HomepageIsLoaded\r\n\r\nexport interface HomepageStore {\r\n    favicon: string;\r\n    text: {\r\n        type: 'Plain' | 'HTML';\r\n        content: string;\r\n        footer: string;\r\n    };\r\n    categories: Category[];\r\n    newTheme: Theme[];\r\n    newReply: Theme[];\r\n    announcement: Announcement[];\r\n    lastUpdate: number;\r\n    hasLoaded: boolean,\r\n}\r\n\r\nexport const homepageInit: HomepageStore = {\r\n    favicon: defaultFavicon,\r\n    text: {\r\n        type: 'Plain',\r\n        content: '并不是恋上了，只是，\\n不可抗拒地，被吸引了。',\r\n        footer: '「恋 × シンアイ彼女」',\r\n    },\r\n    categories: [] as Category[],\r\n    newTheme: [] as Theme[],\r\n    newReply: [] as Theme[],\r\n    announcement: [] as Announcement[],\r\n    lastUpdate: Date.now(),\r\n    hasLoaded: false,\r\n};\r\n\r\nexport function homepageReducer(state = homepageInit, action: Action): HomepageStore {\r\n    switch (action.type) {\r\n        case actions.RECOMMEND_FETCHED:\r\n            const {newTheme, newReply} = action;\r\n            return {...state, newTheme, newReply};\r\n        case actions.HOME_PAGE_FETCHED:\r\n            return {...state, newTheme: action.newTheme, newReply: action.newReply};\r\n        case actions.CATEGORIES_FETCHED:\r\n            return {...state, categories: action.data};\r\n        case actions.HOMEPAGE_IS_LOADED:\r\n            return {...state, hasLoaded: action.on};\r\n    }\r\n    return state;\r\n}\r\n","import * as actions from '../actions';\r\nimport {User} from \"../../configs/types\";\r\n\r\ntype Action =\r\n    | actions.ProcessHandled\r\n    | actions.ProcessStarted\r\n    | actions.UserInfoFetched\r\n\r\nexport interface ComponentStore {\r\n    inProcess: boolean;\r\n    userCenter: User[];\r\n}\r\n\r\nexport const componentInit: ComponentStore = {\r\n    inProcess: false,\r\n    userCenter: [],\r\n}\r\n\r\nexport function componentReducer(state = componentInit, action: Action): ComponentStore {\r\n    switch (action.type) {\r\n        case actions.PROCESS_HANDLED:\r\n            return {...state, inProcess: false};\r\n        case actions.PROCESS_STARTED:\r\n            return {...state, inProcess: true};\r\n        case actions.USER_INFO_FETCHED:\r\n            let arr = state.userCenter;\r\n            arr[action.id] = action.data;\r\n            return {...state, userCenter: arr};\r\n    }\r\n    return state;\r\n}\r\n","import * as actions from '../actions';\r\n\r\ntype Action =\r\n    | actions.RegisterFormFilled\r\n\r\nexport interface ViewStore {\r\n    regForm: {\r\n        username: string;\r\n        password: string;\r\n    };\r\n}\r\n\r\nexport const viewInit: ViewStore = {\r\n    regForm: {} as any,\r\n}\r\n\r\nexport function viewReducer(state = viewInit, action: Action): ViewStore {\r\n    switch (action.type) {\r\n        case actions.REGISTER_FORM_FILLED:\r\n            return {...state, regForm: action.value as any};\r\n    }\r\n    return state;\r\n}\r\n","import * as actions from '../actions';\r\nimport {Announcement, Category, Tag, Theme} from \"../../configs/types\";\r\n\r\ntype Action =\r\n    | actions.CategoryDetailsFetched\r\n\r\nexport interface CategoryStore {\r\n    info: Category;\r\n    highQuality: Theme[];\r\n    pinned: Theme[];\r\n    all: Theme[];\r\n    announce: Announcement[];\r\n    tags: Tag[];\r\n    loaded: number | null;\r\n}\r\n\r\nexport const categoryInit: CategoryStore = {\r\n    info: {} as any,\r\n    highQuality: [],\r\n    pinned: [],\r\n    all: [],\r\n    announce: [],\r\n    tags: [],\r\n    loaded: null,\r\n}\r\n\r\nexport function categoryReducer(state = categoryInit, action: Action): CategoryStore {\r\n    switch (action.type) {\r\n        case actions.CATEGORY_DETAILS_FETCHED:\r\n            const {info, highQuality, pinned, announce, all, tags} = action\r\n            const loaded = info._id;\r\n            return {...state, info, highQuality, pinned, announce, all, tags, loaded};\r\n    }\r\n    return state;\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {userReducer, UserStore} from \"./user\";\r\nimport {homepageReducer, HomepageStore} from \"./homepage\";\r\nimport {componentReducer, ComponentStore} from \"./component\";\r\nimport {viewReducer, ViewStore} from \"./view\";\r\nimport {categoryReducer, CategoryStore} from \"./category\";\r\n\r\nexport interface StoreState {\r\n    user: UserStore;\r\n    homepage: HomepageStore;\r\n    component: ComponentStore;\r\n    view: ViewStore;\r\n    category: CategoryStore;\r\n};\r\n\r\nexport const reducers = combineReducers({\r\n    user: userReducer,\r\n    homepage: homepageReducer,\r\n    component: componentReducer,\r\n    view: viewReducer,\r\n    category: categoryReducer,\r\n});\r\n","import React, {FC, memo, useEffect} from 'react';\r\nimport {createBrowserHistory as createHistory} from 'history';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport {Router as Router} from \"react-router-dom\";\r\nimport {Provider} from \"react-redux\";\r\nimport {applyMiddleware, createStore} from \"redux\";\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport axios from 'axios';\r\n\r\nimport Index from './pages/index';\r\nimport Sagas from \"./sagas\";\r\nimport {reducers} from \"./redux/reducers\";\r\n\r\ntype Object = null | undefined | object;\r\nexport const $history: any = {\r\n    push: (to: string) => {\r\n        _history.push(to);\r\n        console.log(_history)\r\n        document.documentElement.scrollTop = 0;\r\n        document.body.scrollTop = 0;\r\n        window.scrollTo(0, 0);\r\n    },\r\n    $push: (path: string, state?: Object) => _history.push(path, state),\r\n};\r\nconst _history = createHistory();\r\n\r\nconst saga = createSagaMiddleware();\r\nconst middleWares = [saga];\r\nconst middlewareEnhancer = applyMiddleware(...middleWares);\r\nconst isDev = process.env.NODE_ENV === 'development';\r\nconst enhancer = isDev ? composeWithDevTools(middlewareEnhancer) : middlewareEnhancer;\r\nexport const store = createStore(reducers, enhancer);\r\nsaga.run(Sagas);\r\n\r\nstore.subscribe(() => !!store.getState().user.token &&\r\n    axios.interceptors.request.use((config) => {\r\n    config.headers.Authorization = store.getState().user.token ?? undefined;\r\n    return config;\r\n}, (error: any) => Promise.reject(error)));\r\naxios.defaults.withCredentials = true;\r\n\r\nconst App: FC = memo(() => {\r\n\r\n    useEffect(() => {\r\n        import('./utils/statement').then(({statement}) => statement());\r\n    }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router history={_history}>\r\n        <Index />\r\n      </Router>\r\n    </Provider>\r\n  );\r\n});\r\n\r\nexport default App;\r\n"],"sourceRoot":""}